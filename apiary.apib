FORMAT: 1A
HOST: http://movabletype.org

# Movable Type Data API v2
The Movable Type Data API is a REST interface to the Movable Type Content Management System.
The Data API is available for Movable Type Pro and Movable Type Advanced / Enterprise, Version 6.0 and higher.

**TBD**

+ How to upload/set the value of asset type custom fields.

# Group Assets

This is the Assets resource.

Property Name | Type | Data Type | Database Column | Private | Read Only | Description | Version
------------ | ------------- | ------------ | ------------ | ------------- | ------------ | ------------ | ------------
blog | object | - | | | | The blog of this asset. | v2
blog.id | value | number | mt_asset.asset_blog_id | | Y | The ID of the blog that contains this asset. | v2
class | value | string | mt_asset.asset_class | | Y | The type of this asset. This value is similar to 'type' attribute but this value is never localized. | v2
createdBy | Object | - | | | Y | The created user of this asset. | v2
createdBy.id | value | number | mt_asset.asset_created_by | Y | Y | The ID of created user. | v2
createdBy.displayName | value | string | | | Y | The display name of created user. | v2
createdBy.userpicUrl | value | string | | | Y | The URL of created user's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
createdDate | value | iso 8601 datetime | mt_asset.asset_created_on | | Y | The created time for this asset. | v2
customFields | ARRAY | - | | | | The list of customfields data for this asset. | v2
customFields.basename | value | string | mt_field.field_basename | | | The basename of this customfield. | v2
customFields.value | value | string | | | | The value of this customfield. | v2
description | value | string | mt_asset_asset_description | | | The desciption of this asset. | v1
fileExt | value | string | mt_asset.asset_file_ext | | Y | The file extension of this asset. eturns the file extension without the leading period. | v2
filename | value | string | mt_asset.asset_filename | | Y | The filename of this asset that includes file extension. | v1
id | value  | number | mt_asset.asset_id | | Y | The ID of this asset. | v1
label | value  | string | mt_asset.asset_label | | | The label of this asset. | v1
meta | object | - | | | | The meta information of this asset. | v2
meta.fileSize | value | number | | | Y | The file size of this asset. If this asset is not file-based asset, will be returned null. | v2
meta.height | value | number | | | Y | The height of this asset. If this asset has not height meta informatipn, will be returned null. | v2
meta.width | value | number | | | Y | The width of this asset. If this asset has not weight meta informatipn, will be returned null. | v2
mimeType | value | string | mt_asset.asset_mime_type | | Y | The MIME Type of this asset. | v1
modifiedBy | Object | - | | | Y | The last modified user of this asset. | v2
modifiedBy.displayName | value | string | | | Y | The display name of last modified user. | v2
modifiedBy.id | value | number | mt_asset.asset_modified_by | Y | Y | The ID of last modified user. | v2
modifiedBy.userpicUrl | value | string | | | Y | The URL of last modified user's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
modifiedDate | value | iso 8601 datetime | mt_asset.asset_modified_on | | Y | The last modified time for this asset. | v2
parent | object | - | | | | The parent asset of this asset. If this asset is not a child of any assets, will be returned null. | v2
parent.id | value | number | asset_parent | | Y | The ID of parent asset. | v2
tags | ARRAY | string | | | | A list of tags associated with this asset. | v1
type | value | string | mt_asset.asset_class | | Y | The type of this asset. The value will be returned localized value with DefaultLanguage. | v2
updatable | value | boolean | | | Y | <dl><dt>true</dt><dd>The user who accessed can update this asset.</dd><dt>false</dt><dd>The user who accessed cannot update this asset.</dd> | v2
url | value | string | mt_asset.asset_url | | Y | The permalink URL of this asset. | v1

            {
              "createdBy" : {
                "id" : 1
                "userpicUrl" : "/mt-static/support/assets_c/userpics/userpic-1-100x100.png",
                "displayName" : "Yuji Takayama"
              },
              "updatable" : false,
              "meta" : {
                "width" : "800",
                "fileSize" : 194272,
                "height" : "600"
              },
              "url" : "http://example.com/images/1ab89ee2.jpg",
              "id" : "5",
              "modifiedDate" : "2014-11-05T12:59:36+09:00",
              "modifiedBy" : {
                "id" : 1
                "userpicUrl" : "/mt-static/support/assets_c/userpics/userpic-1-100x100.png",
                "displayName" : "Yuji Takayama"
              },
              "parent" : null,
              "blog" : {
                "id" : "22"
              },
              "description" : "Cat photo",
              "tags" : [
                "black",
                "cat",
                "white"
              ],
              "filename" : "1ab89ee2.jpg",
              "type" : "Images",
              "mimeType" : "image/jpeg",
              "label" : "Cat One",
              "createdDate" : "2014-11-05T12:58:52+09:00",
              "class" : "image",
              "customFields" : [],
              "fileExtension" : "jpg"
            },

## uploadBySite [/sites/{site_id}/assets/upload]
### Upload a file to specific site. [POST]

*** This endpoint is marked as deprecated in v2.0. ***

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to upload file.
404 | Not Found | Site not found.
413 | Request Entity Too Large | Upload file size is larger than CGIMaxUpload.

**Permissions**

+ upload

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
path | string | Yes | | The upload destination. You can specify the path to the under the site path.
file | file | Yes | | Actual file data
autoRenameIfExists | boolean | | false | If this value is true and the file with the same filename exists, the uploaded file is automatically renamed to the random generated name.
normalizeOrientation | boolean | | true | If this value is true and the uploaded file has a orientation information in Exif, this file's orientation is automatically normalized.

+ Parameters
    + site_id (required, number) ... The site ID.

+ Request Assets resource

    + Headers
    
            Content-Type: multipart/form-data

    + Body
    
            path=/images&file=filedata&autoRenameIfExists=true&normalizeOrientation=false

+ Response 200 (application/json)

        {
          "id" : 1,
          "label" : "The Bridge",
          "mimeType" : "image/jpeg",
          "url" : "http://example.com/images/the-bridge.jpg",
          "filename" : "the-bridge",
          "description" : "Taken from over the bridge.",
          "tags" : [
            "boston",
            "bridge",
            "light"
          ],
          "blog" : {
            "id" : 1
          },
          "updatable" : true,
          "modifiedBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "modifiedDate" : "2014-10-10T13:13:01+09:00",
          "createdBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "cratedDate" : "2014-10-10T13:13:01+09:00",
          "type" : "Image",
          "class" : "image",
          "fileExt" : "jpg",
          "parent" : {
            "id" : null
          },
          "meta" : {
            "height" : 768,
            "width" : 1024,
            "fileSize" : 339773
          }
        }

## upload [/assets/upload]
### New in v2.0: Upload a file. [POST]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to upload file.
404 | Not Found | Site not found.
413 | Request Entity Too Large | Upload file size is larger than CGIMaxUpload.

**Permissions**

+ upload

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
site_id | number | Yes | | The site ID.
path | string | Yes | | The upload destination. You can specify the path to the under the site path.
file | file | Yes | | Actual file data
autoRenameIfExists | boolean | | false | If this value is true and the file with the same filename exists, the uploaded file is automatically renamed to the random generated name.
normalizeOrientation | boolean | | true | If this value is true and the uploaded file has a orientation information in Exif, this file's orientation is automatically normalized.

+ Request Assets resource

    + Headers
    
            Content-Type: multipart/form-data

    + Body
    
            site_id=1&path=/images&file=filedata&autoRenameIfExists=true&normalizeOrientation=false

+ Response 200 (application/json)

        {
          "id" : 1,
          "label" : "The Bridge",
          "mimeType" : "image/jpeg",
          "url" : "http://example.com/images/the-bridge.jpg",
          "filename" : "the-bridge",
          "description" : "Taken from over the bridge.",
          "tags" : [
            "boston",
            "bridge",
            "light"
          ],
          "blog" : {
            "id" : 1
          },
          "updatable" : true,
          "modifiedBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "modifiedDate" : "2014-10-10T13:13:01+09:00",
          "createdBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "cratedDate" : "2014-10-10T13:13:01+09:00",
          "type" : "Image",
          "class" : "image",
          "fileExt" : "jpg",
          "parent" : {
            "id" : null
          },
          "meta" : {
            "height" : 768,
            "width" : 1024,
            "fileSize" : 339773
          }
        }

## listBySite [/sites/{site_id}/assets(?search, searchFields, limit, offset, class, sortBy, sortOrder, fields)]

### New in v2.0: Retrieve assets in the specified site. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of assets.
404 | Not Found | Site not found.

+ Parameters
    + site_id (required, number) ... The site ID. If 0 specified, will retrieve system-level assets.
    + search (optional, string) ... Search query.
    + searchFields = `label` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of assets to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + class (optional, string) ... The target asset class to retrieve. Available value is 'image', 'audio', 'video', 'file', also something added by any plugins. If you want to retrieve multiple class, specify the strings which separated by comma.
    + sortBy = `created_on` (optional, string) ... <dl><dt>file_name</dt><dd>Sort by the filename of each assets.</dd><dt>created_by</dt><dd>Sort by the ID of user who created each assets. </dd><dt>created_on</dt><dd>(default) Sort by the created time of each assets.</dd></dl>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return assets in descending order. For the date, it means from newest to oldest.</dd><dt>ascend</dt><dd>Return assets in ascending order. For the date, it means from oldest to newset.    </dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Assets resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
          {
            "id" : 1,
            "label" : "The Bridge",
            "mimeType" : "image/jpeg",
            "url" : "http://example.com/images/the-bridge.jpg",
            "filename" : "the-bridge",
            "description" : "Taken from over the bridge.",
            "tags" : [
              "boston",
              "bridge",
              "light"
            ],
            "blog" : {
              "id" : 1
            },
            "updatable" : true,
            "modifiedBy" : {
              "id" : 1,
              "displayName" : "Yuji Takayama",
              "userpicUrl" : null
            },
            "modifiedDate" : "2014-10-10T13:13:01+09:00",
            "createdBy" : {
              "id" : 1,
              "displayName" : "Yuji Takayama",
              "userpicUrl" : null
            },
            "cratedDate" : "2014-10-10T13:13:01+09:00",
            "type" : "Image",
            "class" : "image",
            "fileExt" : "jpg",
            "parent" : {
              "id" : null
            },
            "meta" : {
              "height" : 768,
              "width" : 1024,
              "fileSize" : 339773
            }
          ]
        }

## listByEntry [/sites/:site_id/entries/:entry_id/assets(?limit, offset, class, sortBy, sortOrder, fields)]
### New in v2.0: Retrieve assets that related with specified entry. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of assets.
404 | Not Found | Site or entry not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + entry_id (required, number) ... The entry ID.
    + limit = `10` (optional, number) ... Maximum number of assets to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + class (optional, string) ... The target asset class to retrieve. Available value is image, audio, video, file or something added by any plugins. If you want to retrieve multiple class, specify the strings which separated by comma.
    + sortBy = `created_on` (optional, string) ... <dl><dt>file_name</dt><dd>Sort by the filename of each assets.</dd><dt>created_by</dt><dd>Sort by the ID of user who created each assets. </dd><dt>created_on</dt><dd>(default) Sort by the created time of each assets.</dd></dl>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return assets in descending order. For the date, it means from newest to oldest.</dd><dt>ascend</dt><dd>Return assets in ascending order. For the date, it means from oldest to newset.    </dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Assets resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
          {
            "id" : 1,
            "label" : "The Bridge",
            "mimeType" : "image/jpeg",
            "url" : "http://example.com/images/the-bridge.jpg",
            "filename" : "the-bridge",
            "description" : "Taken from over the bridge.",
            "tags" : [
              "boston",
              "bridge",
              "light"
            ],
            "blog" : {
              "id" : 1
            },
            "updatable" : true,
            "modifiedBy" : {
              "id" : 1,
              "displayName" : "Yuji Takayama",
              "userpicUrl" : null
            },
            "modifiedDate" : "2014-10-10T13:13:01+09:00",
            "createdBy" : {
              "id" : 1,
              "displayName" : "Yuji Takayama",
              "userpicUrl" : null
            },
            "cratedDate" : "2014-10-10T13:13:01+09:00",
            "type" : "Image",
            "class" : "image",
            "fileExt" : "jpg",
            "parent" : {
              "id" : null
            },
            "meta" : {
              "height" : 768,
              "width" : 1024,
              "fileSize" : 339773
            }
          ]
        }

## get [/sites/:site_id/assets/:asset_id(?fields)]
### New in v2.0: Retrieve single asset by its ID. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve an asset.
404 | Not Found | Asset (or site) not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + asset_id (required, number) ... The asset ID.
    + fields (optional, string) ... The field list to retrieve as part of the Assets resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "id" : 1,
          "label" : "The Bridge",
          "mimeType" : "image/jpeg",
          "url" : "http://example.com/images/the-bridge.jpg",
          "filename" : "the-bridge",
          "description" : "Taken from over the bridge.",
          "tags" : [
            "boston",
            "bridge",
            "light"
          ],
          "blog" : {
            "id" : 1
          },
          "updatable" : true,
          "modifiedBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "modifiedDate" : "2014-10-10T13:13:01+09:00",
          "createdBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "cratedDate" : "2014-10-10T13:13:01+09:00",
          "type" : "Image",
          "class" : "image",
          "fileExt" : "jpg",
          "parent" : {
            "id" : null
          },
          "meta" : {
            "height" : 768,
            "width" : 1024,
            "fileSize" : 339773
          }
        }

## update [/sites/:site_id/assets/:asset_id]
### New in v2.0: Update an asset. [PUT]

* Authorization is required.
* This method accepts PUT and POST with __method=PUT.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
401 | Unauthorized | Authentication required
403 | Forbidden | Do not have permission to update an asset.
404 | Not Found | Asset (or site) not found.
405 | Method Not Allowed | Request method is not 'PUT' or 'POST' with '__method=PUT'

**Permissions**

+ Manage Assets

+ Parameters
    + site_id (required, number) ... The site ID.
    + asset_id (required, number) ... The asset ID.

+ Request Assets resource

    
    + Headers
    
            Content-Type: application/x-www-form-urlencoded

    + Body
    
            asset={
              "url" : "http://localhost/blog/20140917-2/images/0cf61aae.jpg",
              "id" : "1",
              "parent" : null,
              "blog" : {
                "id" : "1"
              },
              "description" : "Over the rainbow.",
              "tags" : [
                "boston",
                "bridge",
                "light",
                "night"
              ],
              "label" : "Night Bridge",
            }


+ Response 200 (application/json)

        {
          "id" : 1,
          "label" : "Night Bridge",
          "mimeType" : "image/jpeg",
          "url" : "http://example.com/images/the-bridge.jpg",
          "filename" : "the-bridge",
          "description" : "Over the rainbow.",
          "tags" : [
            "boston",
            "bridge",
            "light",
            "night"
          ],
          "blog" : {
            "id" : 1
          },
          "updatable" : true,
          "modifiedBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "modifiedDate" : "2014-10-10T14:13:01+09:00",
          "createdBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "cratedDate" : "2014-10-10T13:13:01+09:00",
          "type" : "Image",
          "class" : "image",
          "fileExt" : "jpg",
          "parent" : {
            "id" : null
          },
          "meta" : {
            "height" : 768,
            "width" : 1024,
            "fileSize" : 339773
          }
        }

## delete [/sites/:site_id/assets/:asset_id]
### New in v2.0: Delete an asset. [DELETE]

* Authorization is required.
* This method accepts DELETE and POST with __method=DELETE.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
401 | Unauthorized | Authentication required
403 | Forbidden | Do not have permission to delete an asset.
404 | Not Found | Asset (or site) not found.
405 | Method Not Allowed | Request method is not 'DELETE' or 'POST' with '__method=DELETE'

**Permissions**

+ Manage Assets

+ Parameters
    + site_id (required, number) ... The site ID.
    + asset_id (required, number) ... The asset ID.

+ Response 200 (application/json)

        {
          "id" : 1,
          "label" : "The Bridge",
          "mimeType" : "image/jpeg",
          "url" : "http://example.com/images/the-bridge.jpg",
          "filename" : "the-bridge",
          "description" : "Taken from over the bridge.",
          "tags" : [
            "boston",
            "bridge",
            "light"
          ],
          "blog" : {
            "id" : 1
          },
          "updatable" : false,
          "modifiedBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "modifiedDate" : "2014-10-10T13:13:01+09:00",
          "createdBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "cratedDate" : "2014-10-10T13:13:01+09:00",
          "type" : "Image",
          "class" : "image",
          "fileExt" : "jpg",
          "parent" : {
            "id" : null
          },
          "meta" : {
            "height" : 768,
            "width" : 1024,
            "fileSize" : 339773
          }
        }

## getThubmbnail [/sites/:site_id/assets/:asset_id/thumbnail(?width, height, scale, square)]
### New in v2.0: Get thumbnail of an asset. [GET]

This endpoint requires one of parameter 'width' or 'height' or 'scale' Also, cannot use these parameters at same time.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
400 | Bad Request | An asset does not support to generate thumbnail file.
403 | Forbidden | Do not have permission to update an asset.
404 | Not Found | Asset (or site) not found.

**Permissions**

+ Parameters
    + site_id (required, number) ... The site ID.
    + asset_id (required, number) ... The asset ID.
    + width (optional, number) ... The height of the thumbnail to generate. If this is the only parameter specified then the thumbnail’s width will be scaled proportionally to the height. When the longer value than the original image is specified, it will be ignored.
    + height (optional, number) ... The width of the thumbnail to generate. If this is the only parameter specified then the thumbnail’s height will be scaled proportionally to the width. When both of height and width are specified, the longer side of the original image will be processed, and the lesser side will be scaled proportionally.
    + scale (optional, string) ... The percentage by which to reduce or increase the size of the current asset.
    + square (optional, boolean) ... If set to true then the thumbnail generated will be square, where the length of each side of the square will be equal to the shortest side of the image.

+ Response 200 (application/json)

        {
          "height": 200,
          "width": 200,
          "url": "http://example.com/assets_c/2014/10/the-bridge-200x200-1.jpg"
        }

# Group Categories

This is the Categories resource.

Property Name | Type | Data Type | Database Column | Private | Read Only | Description | Version
------------ | ------------- | ------------ | ------------ | ------------- | ------------ | ------------ | ------------
archiveLink | value | string | | | Y | The category archive URL of this category. If "Categroy" archive mapping is not configured, this value will be null. | v2
basename | value | string | mt_category_category_basename | | | The basename of this category. | v1
blog | object | - | | | | The blog of this category. | v1
blog.id | value | number | mt_category.category_blog_id | | Y | The ID of the blog that contains this category. | v1
class | value | string | mt_category.category_class | | Y | The object class for this category. | v1
createdBy | Object | - | | | Y | The created user of this category. | v2
createdBy.displayName | value | string | | | Y | The display name of created user. | v2
createdBy.id | value | number | mt_category.category_created_by | Y | Y | The ID of created user. | v2
createdBy.userpicUrl | value | string | | | Y | The URL of created user's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
createdDate | value | iso 8601 datetime | mt_ctegory.category_created_on | | Y | The created time for this category. | v2
customFields | ARRAY | - | | | | The list of customfields data for this category. | v1
customFields.basename | value | string | mt_field.field_basename | | | The basename of this customfield. | v1
customFields.value | value | string | | | | The value of this customfield. | v1
description | value | string | mt_category.category_description | | Y | The description of this category. | v1
id | value | number | mt_category.category_id | | Y | The ID of this category. | v1
label | value | string | mt_category.category_label | | Y | The label of this category. | v1
modifiedBy | Object | - | | | Y | The last modified user of this asset. | v2
modifiedBy.id | value | number | mt_category.category_modified_by | Y | Y | The ID of last modified user. | v2
modifiedBy.userpicUrl | value | string | | | Y | The URL of last modified user's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
modifiedBy.displayName | value | string | | | Y | The display name of last modified user. | v2
modifiedDate | value | iso 8601 datetime | mt_category.category_modified_on | | Y | The last modified time for this category. | v2
parent | value | number | mt_category.cateogry_parent | | | The ID of the parent category for this category. This field can be updated from v2.  | v1
updatable | value | boolean | | | Y | <dl><dt>true</dt><dd>The user who accessed can update this category.</dd><dt>false</dt><dd>The user who accessed cannot update this category.</dd> | v2


            {
              "parent" : "0",
              "createdBy" : {
                "id" : 1
                "userpicUrl" : "/mt-static/support/assets_c/userpics/userpic-1-100x100.png",
                "displayName" : "Yuji Takayama"
              },
              "updatable" : false,
              "blog" : {
                "id" : "22"
              },
              "description" : "This category includes news articles",
              "basename" : "news",
              "archiveLink" : "http://example.com/news/index.html",
              "id" : 23,
              "class" : "category",
              "label" : "News",
              "createdDate" : "2014-11-05T12:48:27+09:00",
              "modifiedDate" : "2014-11-05T12:52:51+09:00",
              "modifiedBy" : {
                "id" : 1
                "userpicUrl" : "/mt-static/support/assets_c/userpics/userpic-1-100x100.png",
                "displayName" : "Yuji Takayama"
              },
              "customFields" : [
                {
                  "basename" : "bannerimage",
                  "value" : "<form mt:asset-id=\"3\" class=\"mt-enclosure mt-enclosure-image\" style=\"display: inline;\"><a href=\"http://localhost/blog/20141105-1/images/4db95178.png\">4db95178.png</a></form>"
                },
                {
                  "basename" : "address",
                  "value" : ""
                }

## listBySite [/sites/{site_id}/categories(?search, searchFields, limit, offset, sortBy, sortOrder, fields, top)]

### Retrieve categories in the specified site. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of categories.
404 | Not Found | Site not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + search (optional, string) ... Search query.
    + searchFields = `label,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of categories to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `user_custom` (optional, string) ... <dl><dt>user_custom</dt><dd>Sort order you specified on the Manage Categories screen.</dd><dt>created_by</dt><dd>Sort by the ID of user who created each categories. </dd><dt>id</dt><dd>Sort by its own ID.</dd><dt>basename</dt><dd>Sort by the basename of each categories.</dd><dt>label</dt><dd>Sort by the label of each categories.</dd></dl>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return categories in descending order.</dd><dt>ascend</dt><dd>Return categories in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Categories resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + top = `0` (optional, number) ... If set to 1, retrieves only top level categories. New in v2
    + includeIds (optional, string) ... The comma separated ID list of categories to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of categories to exclude from result.

+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
            "basename" : "news",
            "parent" : "0",
            "archiveLink" : "http://example.com/news/index.html",
            "updatable" : false,
            "label" : "News",
            "class" : "category",
            "id" : 2,
            "blog" : {
              "id" : "1"
            },
            "description" : null
          ]
        }

## listByEntry [/sites/{site_id}/entries/{entry_id}/categories(?search, searchFields, limit, offset, sortBy, sortOrder, fields, type, includeIds, excludeIds, top)]

### New in v2.0: Retrieve categories in the specified entry. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of categories.
404 | Not Found | Site or Entry not found.

**Permissions**

+ edit_entry
    + If want to retrieve the non-published entry's categories.

+ Parameters
    + site_id (required, number) ... The site ID.
    + entry_id (required, number) ... The entry ID.
    + search (optional, string) ... Search query.
    + searchFields = `label,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of categories to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `user_custom` (optional, string) ... <dl><dt>user_custom</dt><dd>Sort order you specified on the Manage Categories screen.</dd><dt>created_by</dt><dd>Sort by the ID of user who created each categories. </dd><dt>id</dt><dd>Sort by its own ID.</dd><dt>basename</dt><dd>Sort by the basename of each categories.</dd><dt>label</dt><dd>Sort by the label of each categories.</dd></dl>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return categories in descending order.</dd><dt>ascend</dt><dd>Return categories in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Categories resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + top = `0` (optional, number) ... If set to 1, retrieves only top level categories. New in v2
    + includeIds (optional, string) ... The comma separated ID list of categories to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of categories to exclude from result.
    + type (optional, string) ... <dl><dt>primary</dt><dd>Retrieve primary category only</dd><dt>secondary</dt><dd>Retrieve secondary categories only</dd></dl>

+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
            "basename" : "news",
            "parent" : "0",
            "archiveLink" : "http://example.com/news/index.html",
            "updatable" : false,
            "label" : "News",
            "class" : "category",
            "id" : 2,
            "blog" : {
              "id" : "1"
            },
            "description" : null
          ]
        }

## listParentCategories [/sites/{site_id}/categories/{category_id}/parents(?maxDepth, includeCurrent)]

### New in v2.0: Retrieve parent categories from the specified category. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of categories.
404 | Not Found | Site or Category not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + category_id (required, number) ... The category ID.
    + maxDepth = `0` (optional, number) ... The depth of retrieving parent categories.
    + includeCurrent = `0` (optional, number) ... <dl><dt>1</dt><dd>The list does not include current category.</dd><dt>0</dt><dd>The list includes current category.</dd></dl>

+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
            "basename" : "news",
            "parent" : "0",
            "archiveLink" : "http://example.com/news/index.html",
            "updatable" : false,
            "label" : "News",
            "class" : "category",
            "id" : 2,
            "blog" : {
              "id" : "1"
            },
            "description" : null
          ]
        }

## listSiblingCategories [/sites/{site_id}/categories/{category_id}/siblings(?search, searchFields, limit, offset, sortBy, sortOrder, fields)]

### New in v2.0: Retrieve siblings categories from the specified category. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of categories.
404 | Not Found | Site or Category not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + category_id (required, number) ... The category ID.
    + search (optional, string) ... Search query.
    + searchFields = `label,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of categories to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `user_custom` (optional, string) ... <dl><dt>user_custom</dt><dd>Sort order you specified on the Manage Categories screen.</dd><dt>created_by</dt><dd>Sort by the ID of user who created each categories. </dd><dt>id</dt><dd>Sort by its own ID.</dd><dt>basename</dt><dd>Sort by the basename of each categories.</dd><dt>label</dt><dd>Sort by the label of each categories.</dd></dl>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return categories in descending order.</dd><dt>ascend</dt><dd>Return categories in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Categories resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + top = `0` (optional, number) ... If set to 1, retrieves only top level categories. New in v2
    + includeIds (optional, string) ... The comma separated ID list of categories to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of categories to exclude from result.

+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
            "basename" : "news",
            "parent" : "0",
            "archiveLink" : "http://example.com/news/index.html",
            "updatable" : false,
            "label" : "News",
            "class" : "category",
            "id" : 2,
            "blog" : {
              "id" : "1"
            },
            "description" : null
          ]
        }

## listChildCategories [/sites/{site_id}/categories/{category_id}/children(?maxDepth, includeCurrent)]

### New in v2.0: Retrieve child categories from the specified category. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of categories.
404 | Not Found | Site or Category not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + category_id (required, number) ... The category ID.
    + maxDepth = `0` (optional, number) ... The depth of retrieving parent categories.
    + includeCurrent = `0` (optional, number) ... <dl><dt>1</dt><dd>The list does not include current category.</dd><dt>0</dt><dd>The list includes current category.</dd></dl>

+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
            "basename" : "news",
            "parent" : "0",
            "archiveLink" : "http://example.com/news/index.html",
            "updatable" : false,
            "label" : "News",
            "class" : "category",
            "id" : 2,
            "blog" : {
              "id" : "1"
            },
            "description" : null
          ]
        }

## createCategory [/sites/{site_id}/categories]

### New in v2.0: Create a new category. [GET]
+ Authorization is required.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to create a new category.
404 | Not Found | Site not found.

**Permission**

+ Manage Categories

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
category | Object | Yes | | Single Categories resource

+ Parameters
    + site_id (required, number) ... The site ID.

+ Request Assets resource

    + Headers
    
            Content-Type: application/x-www-form-urlencoded

    + Body
    
            category={"basename" : "news","parent" : "0","archiveLink" : "http://example.com/news/index.html","updatable" : false,"label" : "News","class" : "category","id" : "1","blog" : {"id" : "1"},"description" : null,"customFields" : [{"basename" : "bannerImage","value" : "http://example.com/images/banner.jpg"}]}

## get [/sites/{site_id}/categories/{category_id}(?fields)]

### New in v2.0: Retrieve single category by its ID. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve an category.
404 | Not Found | Category or site not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + category_id (required, number) ... The category ID.
    + fields (optional, string) ... The field list to retrieve as part of the Categories resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "basename" : "news",
          "parent" : "0",
          "archiveLink" : "http://example.com/news/index.html",
          "updatable" : false,
          "label" : "News",
          "class" : "category",
          "id" : 2,
          "blog" : {
            "id" : "1"
          },
          "description" : null
        }

## updateCategory [/sites/{site_id}/categories/{category_id}]

### New in v2.0: Update an existing category. [PUT]
+ Authorization is required.
+ This method accepts DELETE and POST with __method=PUT.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to update a category.
404 | Not Found | Site or Category not found.

**Permission**

+ Manage Categories

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
category | Object | Yes | | Single Categories resource

+ Parameters
    + site_id (required, number) ... The site ID.
    + category_id (required, number) ... The category ID.

+ Request Assets resource

    + Headers
    
            Content-Type: application/x-www-form-urlencoded

    + Body
    
            category={"basename" : "news","parent" : "0","archiveLink" : "http://example.com/news/index.html","updatable" : false,"label" : "News","class" : "category","id" : "1","blog" : {"id" : "1"},"description" : null,"customFields" : [{"basename" : "bannerImage","value" : "http://example.com/images/banner.jpg"}]}

## deleteCategory [/sites/{site_id}/categories/{category_id}]

### New in v2.0: Delete an existing category. [DELETE]
+ Authorization is required.
+ This method accepts DELETE and POST with __method=DELETE.
+ This method returns deleted Category resource.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to delete a category.
404 | Not Found | Site or Category not found.

**Permission**

+ Manage Categories

+ Parameters
    + site_id (required, number) ... The site ID.
    + category_id (required, number) ... The category ID.

+ Response 200 (application/json)

        {
          "basename" : "news",
          "parent" : "0",
          "archiveLink" : "http://example.com/news/index.html",
          "updatable" : false,
          "label" : "News",
          "class" : "category",
          "id" : 2,
          "blog" : {
            "id" : "1"
          },
          "description" : null
        }

## permutateCategories [/sites/{site_id}/categories/permutate]

### New in v2.0: Rearrange existing categories in a new order. [POST]
+ Authorization is required.
+ This method returns rearranged Categories resource.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to delete a category.
404 | Not Found | Site not found.

**Permission**

+ Manage Categories

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
categories | ARRAY | Yes | | Array of Categories resource that were rearranged.

+ Parameters
    + site_id (required, number) ... The site ID.

+ Request Assets resource

    + Headers
    
            Content-Type: application/x-www-form-urlencoded

    + Body
    
            category=[{"basename" : "news","parent" : "0","archiveLink" : "http://example.com/news/index.html","updatable" : false,"label" : "News","class" : "category","id" : "1","blog" : {"id" : "1"},"description" : null,"customFields" : [{"basename" : "bannerImage","value" : "http://example.com/images/banner.jpg"}]}]

+ Response 200 (application/json)

        [
          {
            "basename" : "news",
            "parent" : "0",
            "archiveLink" : "http://example.com/news/index.html",
            "updatable" : false,
            "label" : "News",
            "class" : "category",
            "id" : 2,
            "blog" : {
              "id" : "1"
            },
            "description" : null
          }
        ]


# Group Comments

This is the Comments resource.

Property Name | Type | Data Type | Database Column | Private | Read Only | Description
------------ | ------------- | ------------ | ------------ | ------------- | ------------ | ------------
author | Object | - | | | Y | The commenter of this comment.
author.id | value | number | mt_comment.comment_commenter_id | Y | Y | The ID of this commenter. If commenter is not a registerd user, this field is empty.
author.displayName | value | string | mt_comment.comment_author | | Y | The display name of this commenter.
author.userpicUrl | value | number | | | Y | The URL of this commenter's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If a commenter is not a registered user or a commenter does not set own userpic, will be returned empty string.
entry | Object | - | | | Y | The container entry of this comment.
entry.id | value | number | mt_comment.comment_entry_id | | Y | The ID of the entry that contains this comment.
blog | Object | | | | Y | The blog of this comment.
blog.id | value | number | mt_comment.comment_blog_id | | Y | The ID of the blog that contains this comment.
id | value | number | mt_comment.comment_id | | Y | The ID of this comment.
date | value | iso 8601 datetime | mt_comment.comment_created_on | | Y | The creation time for this comment.
body | value | string | mt_comment.comment_text | | | The contents of this comment.
link | value | string | | | Y | The permalink for this comment.
parent | value | number | mt_comment.comment_parent_id | | | The ID of the parent of this comment. If this comment is not a reply, will be returned 0.
status | value | string | | | | The publishing status of this comment. <dl><dt>Approved</dt><dd>This comment has been approved.<br />In the database, comment_visible = 1 and comment_junk_status = 1.</dd><dt>Pending</dt><dd>This comment has not been approved.<br />In the database, comment_visible = 0 and comment_junk_status = 1.</dd><dt>Spam</dt><dd>This comment has been marked as Spam.<br />In the database, comment_visible = 0 and comment_junk_status = -1.</dd></dl>
updatable | value | boolean | | | Y | <dl><dt>true</dt><dd>The user who accessed can update this comment.</dd><dt>false</dt><dd>The user who accessed cannot update this comment.</dd>
customFields | ARRAY | - | | | | The list of customfields data for this category.
customFields.basename | value | string | mt_field.field_basename | | | The basename of this customfield.
customFields.value | value | string | | | | The value of this customfield.


        {
          "author" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : "http://example.com/mt-static/support/assets_c/userpics/userpic-1-32x32.png"
          },
          "entry" : {
            "id" : 1
          },
          "blog" : {
            "id" : 1
          },
          "id" : 2,
          "date" : "2013-01-11T12:48:12+09:00",
          "body" : "This is a test comment.\nHe he he",
          "link" : "http://example.com/blog/2012/01/entry.html#comment-2",
          "parent" : 1,
          "status" : "Approved",
          "updatable": true,
          "customFields" : {
            "items" : [
              {
                "basename" : "cf_fields_1",
                "value" : "Test data"
              },
              {
                "basename" : "cf_field_2",
                "value" : "Test data 2"
              }
            ]
          }
        }

## listBySite [/sites/{site_id}/comments(?search, searchFields, limit, offset, sortBy, sortOrder, fields, top)]

### Retrieve a list of comments in the specified site. [GET]

+ Authorization is required if want to include unpublished comments.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of comments.
404 | Not Found | Site not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + search (optional, string) ... Search query.
    + searchFields = `body` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of comments to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `id` (optional, string) ... The field name for sort.
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return comments in descending order.</dd><dt>ascend</dt><dd>Return comments in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Comments resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of comments to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of comments to exclude from result.
    + status (optional, string) ... Filter by status.<dl><dt>Approved</dt><dd>comment_visible is 1 and comment_junk_status is 1.</dd><dt>Pending</dt><dd>comment_visible is 0 and comment_junk_status is 1.</dd><dt>Spam</dt><dd>comment_junk_status is -1.</dd></dl>
    + entryStatus (optional, string) ... Filter by container entry's status. <dl><dt>Draft</dt><dd>entry_status is 1.</dd><dt>Publish</dt><dd>entry_status is 2.</dd><dt>Review</dt><dd>entry_status is 3.</dd><dt>Future</dt><dd>entry_status is 4.</dd><dt>Spam</dt><dd>entry_status is 5.</dd></dl>


+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
              "author" : {
                "id" : 1,
                "displayName" : "Yuji Takayama",
                "userpicUrl" : "http://example.com/mt-static/support/assets_c/userpics/userpic-1-32x32.png"
              },
              "entry" : {
                "id" : 1
              },
              "blog" : {
                "id" : 1
              },
              "id" : 2,
              "date" : "2013-01-11T12:48:12+09:00",
              "body" : "This is a test comment.\nHe he he",
              "link" : "http://example.com/blog/2012/01/entry.html#comment-2",
              "parent" : 1,
              "status" : "Approved",
              "updatable": true,
              "customFields" : [
                {
                  "basename" : "cf_fields_1",
                  "value" : "Test data"
                },
                {
                  "basename" : "cf_field_2",
                  "value" : "Test data 2"
                }
              ]
            }
          ]
        }

