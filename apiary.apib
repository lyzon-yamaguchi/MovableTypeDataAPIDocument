FORMAT: 1A
HOST: http://movabletype.org

# Movable Type Data API v2
The Movable Type Data API is a REST interface to the Movable Type Content Management System.
The Data API is available for Movable Type Pro and Movable Type Advanced / Enterprise, Version 6.0 and higher.

**TBD**

+ How to upload/set the value of asset type custom fields.
+ Think about anonymous comment.


# Group Assets

This is the Assets resource.

Property Name | Type | Data Type | Database Column | Private | Read Only | Description | Version
------------ | ------------- | ------------ | ------------ | ------------- | ------------ | ------------ | ------------
blog | object | - | | | | The blog of this asset. | v2
blog.id | value | number | mt_asset.asset_blog_id | | Y | The ID of the blog that contains this asset. | v2
class | value | string | mt_asset.asset_class | | Y | The type of this asset. This value is similar to 'type' attribute but this value is never localized. | v2
createdBy | Object | - | | | Y | The created user of this asset. | v2
createdBy.id | value | number | mt_asset.asset_created_by | Y | Y | The ID of created user. | v2
createdBy.displayName | value | string | | | Y | The display name of created user. | v2
createdBy.userpicUrl | value | string | | | Y | The URL of created user's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
createdDate | value | iso 8601 datetime | mt_asset.asset_created_on | | Y | The created time for this asset. | v2
customFields | ARRAY | - | | | | The list of customfields data for this asset. | v2
customFields.basename | value | string | mt_field.field_basename | | | The basename of this customfield. | v2
customFields.value | value | string | | | | The value of this customfield. | v2
description | value | string | mt_asset_asset_description | | | The desciption of this asset. | v1
fileExt | value | string | mt_asset.asset_file_ext | | Y | The file extension of this asset. eturns the file extension without the leading period. | v2
filename | value | string | mt_asset.asset_filename | | Y | The filename of this asset that includes file extension. | v1
id | value  | number | mt_asset.asset_id | | Y | The ID of this asset. | v1
label | value  | string | mt_asset.asset_label | | | The label of this asset. | v1
meta | object | - | | | | The meta information of this asset. | v2
meta.fileSize | value | number | | | Y | The file size of this asset. If this asset is not file-based asset, will be returned null. | v2
meta.height | value | number | | | Y | The height of this asset. If this asset has not height meta informatipn, will be returned null. | v2
meta.width | value | number | | | Y | The width of this asset. If this asset has not weight meta informatipn, will be returned null. | v2
mimeType | value | string | mt_asset.asset_mime_type | | Y | The MIME Type of this asset. | v1
modifiedBy | Object | - | | | Y | The last modified user of this asset. | v2
modifiedBy.displayName | value | string | | | Y | The display name of last modified user. | v2
modifiedBy.id | value | number | mt_asset.asset_modified_by | Y | Y | The ID of last modified user. | v2
modifiedBy.userpicUrl | value | string | | | Y | The URL of last modified user's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
modifiedDate | value | iso 8601 datetime | mt_asset.asset_modified_on | | Y | The last modified time for this asset. | v2
parent | object | - | | | | The parent asset of this asset. If this asset is not a child of any assets, will be returned null. | v2
parent.id | value | number | asset_parent | | Y | The ID of parent asset. | v2
tags | ARRAY | string | | | | A list of tags associated with this asset. | v1
type | value | string | mt_asset.asset_class | | Y | The type of this asset. The value will be returned localized value with DefaultLanguage. | v2
updatable | value | boolean | | | Y | <dl><dt>true</dt><dd>The user who accessed can update this asset.</dd><dt>false</dt><dd>The user who accessed cannot update this asset.</dd> | v2
url | value | string | mt_asset.asset_url | | Y | The permalink URL of this asset. | v1

            {
              "createdBy" : {
                "id" : 1
                "userpicUrl" : "/mt-static/support/assets_c/userpics/userpic-1-100x100.png",
                "displayName" : "Yuji Takayama"
              },
              "updatable" : false,
              "meta" : {
                "width" : "800",
                "fileSize" : 194272,
                "height" : "600"
              },
              "url" : "http://example.com/images/1ab89ee2.jpg",
              "id" : "5",
              "modifiedDate" : "2014-11-05T12:59:36+09:00",
              "modifiedBy" : {
                "id" : 1
                "userpicUrl" : "/mt-static/support/assets_c/userpics/userpic-1-100x100.png",
                "displayName" : "Yuji Takayama"
              },
              "parent" : null,
              "blog" : {
                "id" : "22"
              },
              "description" : "Cat photo",
              "tags" : [
                "black",
                "cat",
                "white"
              ],
              "filename" : "1ab89ee2.jpg",
              "type" : "Images",
              "mimeType" : "image/jpeg",
              "label" : "Cat One",
              "createdDate" : "2014-11-05T12:58:52+09:00",
              "class" : "image",
              "customFields" : [],
              "fileExtension" : "jpg"
            },

## uploadAssetForSite [/sites/{site_id}/assets/upload]
### Upload a file to specific site. [POST]

+ This endpoint is marked as deprecated in v2.0.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to upload file.
404 | Not Found | Site not found.
413 | Request Entity Too Large | Upload file size is larger than CGIMaxUpload.

**Permissions**

+ upload

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
path | string | Yes | | The upload destination. You can specify the path to the under the site path.
file | file | Yes | | Actual file data
autoRenameIfExists | boolean | | false | If this value is true and the file with the same filename exists, the uploaded file is automatically renamed to the random generated name.
normalizeOrientation | boolean | | true | If this value is true and the uploaded file has a orientation information in Exif, this file's orientation is automatically normalized.

+ Parameters
    + site_id (required, number) ... The site ID.

+ Request Assets resource

    + Headers

            Content-Type: multipart/form-data

    + Body

            path=/images&file=filedata&autoRenameIfExists=true&normalizeOrientation=false

+ Response 200 (application/json)

        {
          "id" : 1,
          "label" : "The Bridge",
          "mimeType" : "image/jpeg",
          "url" : "http://example.com/images/the-bridge.jpg",
          "filename" : "the-bridge",
          "description" : "Taken from over the bridge.",
          "tags" : [
            "boston",
            "bridge",
            "light"
          ],
          "blog" : {
            "id" : 1
          },
          "updatable" : true,
          "modifiedBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "modifiedDate" : "2014-10-10T13:13:01+09:00",
          "createdBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "cratedDate" : "2014-10-10T13:13:01+09:00",
          "type" : "Image",
          "class" : "image",
          "fileExt" : "jpg",
          "parent" : {
            "id" : null
          },
          "meta" : {
            "height" : 768,
            "width" : 1024,
            "fileSize" : 339773
          }
        }

## uploadAsset [/assets/upload]
### New in v2.0: Upload a file. [POST]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to upload file.
404 | Not Found | Site not found.
413 | Request Entity Too Large | Upload file size is larger than CGIMaxUpload.

**Permissions**

+ upload

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
site_id | number | Yes | | The site ID.
path | string | Yes | | The upload destination. You can specify the path to the under the site path.
file | file | Yes | | Actual file data
autoRenameIfExists | boolean | | false | If this value is true and the file with the same filename exists, the uploaded file is automatically renamed to the random generated name.
normalizeOrientation | boolean | | true | If this value is true and the uploaded file has a orientation information in Exif, this file's orientation is automatically normalized.

+ Request Assets resource

    + Headers

            Content-Type: multipart/form-data

    + Body

            site_id=1&path=/images&file=filedata&autoRenameIfExists=true&normalizeOrientation=false

+ Response 200 (application/json)

        {
          "id" : 1,
          "label" : "The Bridge",
          "mimeType" : "image/jpeg",
          "url" : "http://example.com/images/the-bridge.jpg",
          "filename" : "the-bridge",
          "description" : "Taken from over the bridge.",
          "tags" : [
            "boston",
            "bridge",
            "light"
          ],
          "blog" : {
            "id" : 1
          },
          "updatable" : true,
          "modifiedBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "modifiedDate" : "2014-10-10T13:13:01+09:00",
          "createdBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "cratedDate" : "2014-10-10T13:13:01+09:00",
          "type" : "Image",
          "class" : "image",
          "fileExt" : "jpg",
          "parent" : {
            "id" : null
          },
          "meta" : {
            "height" : 768,
            "width" : 1024,
            "fileSize" : 339773
          }
        }

## listAssets [/sites/{site_id}/assets(?search, searchFields, limit, offset, class, sortBy, sortOrder, fields)]

### New in v2.0: Retrieve assets in the specified site. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of assets.
404 | Not Found | Site not found.

+ Parameters
    + site_id (required, number) ... The site ID. If 0 specified, will retrieve system-level assets.
    + search (optional, string) ... Search query.
    + searchFields = `label` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of assets to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + class (optional, string) ... The target asset class to retrieve. Available value is 'image', 'audio', 'video', 'file', also something added by any plugins. If you want to retrieve multiple class, specify the strings which separated by comma.
    + sortBy = `created_on` (optional, string) ... <dl><dt>file_name</dt><dd>Sort by the filename of each assets.</dd><dt>created_by</dt><dd>Sort by the ID of user who created each assets. </dd><dt>created_on</dt><dd>(default) Sort by the created time of each assets.</dd></dl>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return assets in descending order. For the date, it means from newest to oldest.</dd><dt>ascend</dt><dd>Return assets in ascending order. For the date, it means from oldest to newset.    </dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Assets resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
          {
            "id" : 1,
            "label" : "The Bridge",
            "mimeType" : "image/jpeg",
            "url" : "http://example.com/images/the-bridge.jpg",
            "filename" : "the-bridge",
            "description" : "Taken from over the bridge.",
            "tags" : [
              "boston",
              "bridge",
              "light"
            ],
            "blog" : {
              "id" : 1
            },
            "updatable" : true,
            "modifiedBy" : {
              "id" : 1,
              "displayName" : "Yuji Takayama",
              "userpicUrl" : null
            },
            "modifiedDate" : "2014-10-10T13:13:01+09:00",
            "createdBy" : {
              "id" : 1,
              "displayName" : "Yuji Takayama",
              "userpicUrl" : null
            },
            "cratedDate" : "2014-10-10T13:13:01+09:00",
            "type" : "Image",
            "class" : "image",
            "fileExt" : "jpg",
            "parent" : {
              "id" : null
            },
            "meta" : {
              "height" : 768,
              "width" : 1024,
              "fileSize" : 339773
            }
          ]
        }

## listAssetsForEntry [/sites/:site_id/entries/:entry_id/assets(?limit, offset, class, sortBy, sortOrder, fields)]
### New in v2.0: Retrieve assets that related with specified entry. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of assets.
404 | Not Found | Site or entry not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + entry_id (required, number) ... The entry ID.
    + limit = `10` (optional, number) ... Maximum number of assets to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + class (optional, string) ... The target asset class to retrieve. Available value is image, audio, video, file or something added by any plugins. If you want to retrieve multiple class, specify the strings which separated by comma.
    + sortBy = `created_on` (optional, string) ... <dl><dt>file_name</dt><dd>Sort by the filename of each assets.</dd><dt>created_by</dt><dd>Sort by the ID of user who created each assets. </dd><dt>created_on</dt><dd>(default) Sort by the created time of each assets.</dd></dl>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return assets in descending order. For the date, it means from newest to oldest.</dd><dt>ascend</dt><dd>Return assets in ascending order. For the date, it means from oldest to newset.    </dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Assets resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
          {
            "id" : 1,
            "label" : "The Bridge",
            "mimeType" : "image/jpeg",
            "url" : "http://example.com/images/the-bridge.jpg",
            "filename" : "the-bridge",
            "description" : "Taken from over the bridge.",
            "tags" : [
              "boston",
              "bridge",
              "light"
            ],
            "blog" : {
              "id" : 1
            },
            "updatable" : true,
            "modifiedBy" : {
              "id" : 1,
              "displayName" : "Yuji Takayama",
              "userpicUrl" : null
            },
            "modifiedDate" : "2014-10-10T13:13:01+09:00",
            "createdBy" : {
              "id" : 1,
              "displayName" : "Yuji Takayama",
              "userpicUrl" : null
            },
            "cratedDate" : "2014-10-10T13:13:01+09:00",
            "type" : "Image",
            "class" : "image",
            "fileExt" : "jpg",
            "parent" : {
              "id" : null
            },
            "meta" : {
              "height" : 768,
              "width" : 1024,
              "fileSize" : 339773
            }
          ]
        }

## listAssetsForPage [/sites/:site_id/pages/:page_id/assets(?limit, offset, class, sortBy, sortOrder, fields)]
### New in v2.0: Retrieve assets that related with specified page. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of assets.
404 | Not Found | Site or page not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + page_id (required, number) ... The page ID.
    + limit = `10` (optional, number) ... Maximum number of assets to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + class (optional, string) ... The target asset class to retrieve. Available value is image, audio, video, file or something added by any plugins. If you want to retrieve multiple class, specify the strings which separated by comma.
    + sortBy = `created_on` (optional, string) ... <dl><dt>file_name</dt><dd>Sort by the filename of each assets.</dd><dt>created_by</dt><dd>Sort by the ID of user who created each assets. </dd><dt>created_on</dt><dd>(default) Sort by the created time of each assets.</dd></dl>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return assets in descending order. For the date, it means from newest to oldest.</dd><dt>ascend</dt><dd>Return assets in ascending order. For the date, it means from oldest to newset.    </dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Assets resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
          {
            "id" : 1,
            "label" : "The Bridge",
            "mimeType" : "image/jpeg",
            "url" : "http://example.com/images/the-bridge.jpg",
            "filename" : "the-bridge",
            "description" : "Taken from over the bridge.",
            "tags" : [
              "boston",
              "bridge",
              "light"
            ],
            "blog" : {
              "id" : 1
            },
            "updatable" : true,
            "modifiedBy" : {
              "id" : 1,
              "displayName" : "Yuji Takayama",
              "userpicUrl" : null
            },
            "modifiedDate" : "2014-10-10T13:13:01+09:00",
            "createdBy" : {
              "id" : 1,
              "displayName" : "Yuji Takayama",
              "userpicUrl" : null
            },
            "cratedDate" : "2014-10-10T13:13:01+09:00",
            "type" : "Image",
            "class" : "image",
            "fileExt" : "jpg",
            "parent" : {
              "id" : null
            },
            "meta" : {
              "height" : 768,
              "width" : 1024,
              "fileSize" : 339773
            }
          ]
        }

## listAssetsForSiteAndTag [/sites/:site_id/tags/:tag_id/assets(?limit, offset, class, sortBy, sortOrder, fields)]
### New in v2.0: Retrieve assets that related with specified tag. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of assets.
404 | Not Found | Site or tag not found.


+ Parameters
    + site_id (required, number) ... The site ID.
    + tag_id (required, number) ... The tag ID.
    + limit = `10` (optional, number) ... Maximum number of assets to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + class (optional, string) ... The target asset class to retrieve. Available value is image, audio, video, file or something added by any plugins. If you want to retrieve multiple class, specify the strings which separated by comma.
    + sortBy = `created_on` (optional, string) ... <dl><dt>file_name</dt><dd>Sort by the filename of each assets.</dd><dt>created_by</dt><dd>Sort by the ID of user who created each assets. </dd><dt>created_on</dt><dd>(default) Sort by the created time of each assets.</dd></dl>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return assets in descending order. For the date, it means from newest to oldest.</dd><dt>ascend</dt><dd>Return assets in ascending order. For the date, it means from oldest to newset.    </dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Assets resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
          {
            "id" : 1,
            "label" : "The Bridge",
            "mimeType" : "image/jpeg",
            "url" : "http://example.com/images/the-bridge.jpg",
            "filename" : "the-bridge",
            "description" : "Taken from over the bridge.",
            "tags" : [
              "boston",
              "bridge",
              "light"
            ],
            "blog" : {
              "id" : 1
            },
            "updatable" : true,
            "modifiedBy" : {
              "id" : 1,
              "displayName" : "Yuji Takayama",
              "userpicUrl" : null
            },
            "modifiedDate" : "2014-10-10T13:13:01+09:00",
            "createdBy" : {
              "id" : 1,
              "displayName" : "Yuji Takayama",
              "userpicUrl" : null
            },
            "cratedDate" : "2014-10-10T13:13:01+09:00",
            "type" : "Image",
            "class" : "image",
            "fileExt" : "jpg",
            "parent" : {
              "id" : null
            },
            "meta" : {
              "height" : 768,
              "width" : 1024,
              "fileSize" : 339773
            }
          ]
        }

## getAsset [/sites/:site_id/assets/:asset_id(?fields)]
### New in v2.0: Retrieve single asset by its ID. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve an asset.
404 | Not Found | Asset (or site) not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + asset_id (required, number) ... The asset ID.
    + fields (optional, string) ... The field list to retrieve as part of the Assets resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "id" : 1,
          "label" : "The Bridge",
          "mimeType" : "image/jpeg",
          "url" : "http://example.com/images/the-bridge.jpg",
          "filename" : "the-bridge",
          "description" : "Taken from over the bridge.",
          "tags" : [
            "boston",
            "bridge",
            "light"
          ],
          "blog" : {
            "id" : 1
          },
          "updatable" : true,
          "modifiedBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "modifiedDate" : "2014-10-10T13:13:01+09:00",
          "createdBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "cratedDate" : "2014-10-10T13:13:01+09:00",
          "type" : "Image",
          "class" : "image",
          "fileExt" : "jpg",
          "parent" : {
            "id" : null
          },
          "meta" : {
            "height" : 768,
            "width" : 1024,
            "fileSize" : 339773
          }
        }

## updateAsset and deleteAsset [/sites/:site_id/assets/:asset_id]
### New in v2.0: Update an asset. [PUT]

* Authorization is required.
* This method accepts PUT and POST with __method=PUT.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
401 | Unauthorized | Authentication required
403 | Forbidden | Do not have permission to update an asset.
404 | Not Found | Asset (or site) not found.
405 | Method Not Allowed | Request method is not 'PUT' or 'POST' with '__method=PUT'

**Permissions**

+ Manage Assets

+ Parameters
    + site_id (required, number) ... The site ID.
    + asset_id (required, number) ... The asset ID.

+ Request Assets resource


    + Headers

            Content-Type: application/x-www-form-urlencoded

    + Body

            asset={
              "url" : "http://localhost/blog/20140917-2/images/0cf61aae.jpg",
              "id" : "1",
              "parent" : null,
              "blog" : {
                "id" : "1"
              },
              "description" : "Over the rainbow.",
              "tags" : [
                "boston",
                "bridge",
                "light",
                "night"
              ],
              "label" : "Night Bridge",
            }


+ Response 200 (application/json)

        {
          "id" : 1,
          "label" : "Night Bridge",
          "mimeType" : "image/jpeg",
          "url" : "http://example.com/images/the-bridge.jpg",
          "filename" : "the-bridge",
          "description" : "Over the rainbow.",
          "tags" : [
            "boston",
            "bridge",
            "light",
            "night"
          ],
          "blog" : {
            "id" : 1
          },
          "updatable" : true,
          "modifiedBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "modifiedDate" : "2014-10-10T14:13:01+09:00",
          "createdBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "cratedDate" : "2014-10-10T13:13:01+09:00",
          "type" : "Image",
          "class" : "image",
          "fileExt" : "jpg",
          "parent" : {
            "id" : null
          },
          "meta" : {
            "height" : 768,
            "width" : 1024,
            "fileSize" : 339773
          }
        }

### New in v2.0: Delete an asset. [DELETE]

* Authorization is required.
* This method accepts DELETE and POST with __method=DELETE.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
401 | Unauthorized | Authentication required
403 | Forbidden | Do not have permission to delete an asset.
404 | Not Found | Asset (or site) not found.
405 | Method Not Allowed | Request method is not 'DELETE' or 'POST' with '__method=DELETE'

**Permissions**

+ Manage Assets

+ Parameters
    + site_id (required, number) ... The site ID.
    + asset_id (required, number) ... The asset ID.

+ Response 200 (application/json)

        {
          "id" : 1,
          "label" : "The Bridge",
          "mimeType" : "image/jpeg",
          "url" : "http://example.com/images/the-bridge.jpg",
          "filename" : "the-bridge",
          "description" : "Taken from over the bridge.",
          "tags" : [
            "boston",
            "bridge",
            "light"
          ],
          "blog" : {
            "id" : 1
          },
          "updatable" : false,
          "modifiedBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "modifiedDate" : "2014-10-10T13:13:01+09:00",
          "createdBy" : {
            "id" : 1,
            "displayName" : "Yuji Takayama",
            "userpicUrl" : null
          },
          "cratedDate" : "2014-10-10T13:13:01+09:00",
          "type" : "Image",
          "class" : "image",
          "fileExt" : "jpg",
          "parent" : {
            "id" : null
          },
          "meta" : {
            "height" : 768,
            "width" : 1024,
            "fileSize" : 339773
          }
        }

## getThubmbnail [/sites/:site_id/assets/:asset_id/thumbnail(?width, height, scale, square)]
### New in v2.0: Get thumbnail of an asset. [GET]

This endpoint requires one of parameter 'width' or 'height' or 'scale' Also, cannot use these parameters at same time.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
400 | Bad Request | An asset does not support to generate thumbnail file.
403 | Forbidden | Do not have permission to update an asset.
404 | Not Found | Asset (or site) not found.

**Permissions**

+ Parameters
    + site_id (required, number) ... The site ID.
    + asset_id (required, number) ... The asset ID.
    + width (optional, number) ... The height of the thumbnail to generate. If this is the only parameter specified then the thumbnail’s width will be scaled proportionally to the height. When the longer value than the original image is specified, it will be ignored.
    + height (optional, number) ... The width of the thumbnail to generate. If this is the only parameter specified then the thumbnail’s height will be scaled proportionally to the width. When both of height and width are specified, the longer side of the original image will be processed, and the lesser side will be scaled proportionally.
    + scale (optional, string) ... The percentage by which to reduce or increase the size of the current asset.
    + square (optional, boolean) ... If set to true then the thumbnail generated will be square, where the length of each side of the square will be equal to the shortest side of the image.

+ Response 200 (application/json)

        {
          "height": 200,
          "width": 200,
          "url": "http://example.com/assets_c/2014/10/the-bridge-200x200-1.jpg"
        }

# Group Categories

This is the Categories resource.

Property Name | Type | Data Type | Database Column | Private | Read Only | Description | Version
------------ | ------------- | ------------ | ------------ | ------------- | ------------ | ------------ | ------------
archiveLink | value | string | | | Y | The category archive URL of this category. If "Categroy" archive mapping is not configured, this value will be null. | v2
basename | value | string | mt_category_category_basename | | | The basename of this category. | v1
blog | object | - | | | | The blog of this category. | v1
blog.id | value | number | mt_category.category_blog_id | | Y | The ID of the blog that contains this category. | v1
class | value | string | mt_category.category_class | | Y | The object class for this category. | v1
createdBy | Object | - | | | Y | The created user of this category. | v2
createdBy.displayName | value | string | | | Y | The display name of created user. | v2
createdBy.id | value | number | mt_category.category_created_by | Y | Y | The ID of created user. | v2
createdBy.userpicUrl | value | string | | | Y | The URL of created user's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
createdDate | value | iso 8601 datetime | mt_ctegory.category_created_on | | Y | The created time for this category. | v2
customFields | ARRAY | - | | | | The list of customfields data for this category. | v1
customFields.basename | value | string | mt_field.field_basename | | | The basename of this customfield. | v1
customFields.value | value | string | | | | The value of this customfield. | v1
description | value | string | mt_category.category_description | | Y | The description of this category. | v1
id | value | number | mt_category.category_id | | Y | The ID of this category. | v1
label | value | string | mt_category.category_label | | Y | The label of this category. | v1
modifiedBy | Object | - | | | Y | The last modified user of this asset. | v2
modifiedBy.id | value | number | mt_category.category_modified_by | Y | Y | The ID of last modified user. | v2
modifiedBy.userpicUrl | value | string | | | Y | The URL of last modified user's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
modifiedBy.displayName | value | string | | | Y | The display name of last modified user. | v2
modifiedDate | value | iso 8601 datetime | mt_category.category_modified_on | | Y | The last modified time for this category. | v2
parent | value | number | mt_category.cateogry_parent | | | The ID of the parent category for this category. This field can be updated from v2.  | v1
updatable | value | boolean | | | Y | <dl><dt>true</dt><dd>The user who accessed can update this category.</dd><dt>false</dt><dd>The user who accessed cannot update this category.</dd> | v2


            {
              "parent" : "0",
              "createdBy" : {
                "id" : 1
                "userpicUrl" : "/mt-static/support/assets_c/userpics/userpic-1-100x100.png",
                "displayName" : "Yuji Takayama"
              },
              "updatable" : false,
              "blog" : {
                "id" : "22"
              },
              "description" : "This category includes news articles",
              "basename" : "news",
              "archiveLink" : "http://example.com/news/index.html",
              "id" : 23,
              "class" : "category",
              "label" : "News",
              "createdDate" : "2014-11-05T12:48:27+09:00",
              "modifiedDate" : "2014-11-05T12:52:51+09:00",
              "modifiedBy" : {
                "id" : 1
                "userpicUrl" : "/mt-static/support/assets_c/userpics/userpic-1-100x100.png",
                "displayName" : "Yuji Takayama"
              },
              "customFields" : [
                {
                  "basename" : "bannerimage",
                  "value" : "<form mt:asset-id=\"3\" class=\"mt-enclosure mt-enclosure-image\" style=\"display: inline;\"><a href=\"http://localhost/blog/20141105-1/images/4db95178.png\">4db95178.png</a></form>"
                },
                {
                  "basename" : "address",
                  "value" : ""
                }

## listCategories [/sites/{site_id}/categories(?search, searchFields, limit, offset, sortBy, sortOrder, fields, top, includeIds, excludeIds)]

### Retrieve categories in the specified site. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of categories.
404 | Not Found | Site not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + search (optional, string) ... Search query.
    + searchFields = `label,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of categories to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `user_custom` (optional, string) ... <dl><dt>user_custom</dt><dd>Sort order you specified on the Manage Categories screen.</dd><dt>created_by</dt><dd>Sort by the ID of user who created each categories. </dd><dt>id</dt><dd>Sort by its own ID.</dd><dt>basename</dt><dd>Sort by the basename of each categories.</dd><dt>label</dt><dd>Sort by the label of each categories.</dd></dl>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return categories in descending order.</dd><dt>ascend</dt><dd>Return categories in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Categories resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + top = `0` (optional, number) ... If set to 1, retrieves only top level categories. New in v2
    + includeIds (optional, string) ... The comma separated ID list of categories to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of categories to exclude from result.

+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
            "basename" : "news",
            "parent" : "0",
            "archiveLink" : "http://example.com/news/index.html",
            "updatable" : false,
            "label" : "News",
            "class" : "category",
            "id" : 2,
            "blog" : {
              "id" : "1"
            },
            "description" : null
          ]
        }

## listCategoriesForEntry [/sites/{site_id}/entries/{entry_id}/categories(?search, searchFields, limit, offset, sortBy, sortOrder, fields, type, includeIds, excludeIds, top)]

### New in v2.0: Retrieve categories in the specified entry. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of categories.
404 | Not Found | Site or Entry not found.

**Permissions**

+ edit_entry
    + If want to retrieve the non-published entry's categories.

+ Parameters
    + site_id (required, number) ... The site ID.
    + entry_id (required, number) ... The entry ID.
    + search (optional, string) ... Search query.
    + searchFields = `label,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of categories to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `user_custom` (optional, string) ... <dl><dt>user_custom</dt><dd>Sort order you specified on the Manage Categories screen.</dd><dt>created_by</dt><dd>Sort by the ID of user who created each categories. </dd><dt>id</dt><dd>Sort by its own ID.</dd><dt>basename</dt><dd>Sort by the basename of each categories.</dd><dt>label</dt><dd>Sort by the label of each categories.</dd></dl>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return categories in descending order.</dd><dt>ascend</dt><dd>Return categories in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Categories resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + top = `0` (optional, number) ... If set to 1, retrieves only top level categories. New in v2
    + includeIds (optional, string) ... The comma separated ID list of categories to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of categories to exclude from result.
    + type (optional, string) ... <dl><dt>primary</dt><dd>Retrieve primary category only</dd><dt>secondary</dt><dd>Retrieve secondary categories only</dd></dl>

+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
            "basename" : "news",
            "parent" : "0",
            "archiveLink" : "http://example.com/news/index.html",
            "updatable" : false,
            "label" : "News",
            "class" : "category",
            "id" : 2,
            "blog" : {
              "id" : "1"
            },
            "description" : null
          ]
        }

## listParentCategories [/sites/{site_id}/categories/{category_id}/parents(?maxDepth, includeCurrent)]

### New in v2.0: Retrieve parent categories from the specified category. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of categories.
404 | Not Found | Site or Category not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + category_id (required, number) ... The category ID.
    + maxDepth = `0` (optional, number) ... The depth of retrieving parent categories.
    + includeCurrent = `0` (optional, number) ... <dl><dt>1</dt><dd>The list does not include current category.</dd><dt>0</dt><dd>The list includes current category.</dd></dl>

+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
            "basename" : "news",
            "parent" : "0",
            "archiveLink" : "http://example.com/news/index.html",
            "updatable" : false,
            "label" : "News",
            "class" : "category",
            "id" : 2,
            "blog" : {
              "id" : "1"
            },
            "description" : null
          ]
        }

## listSiblingCategories [/sites/{site_id}/categories/{category_id}/siblings(?search, searchFields, limit, offset, sortBy, sortOrder, fields, top, includeIds, excludeIds)]

### New in v2.0: Retrieve siblings categories from the specified category. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of categories.
404 | Not Found | Site or Category not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + category_id (required, number) ... The category ID.
    + search (optional, string) ... Search query.
    + searchFields = `label,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of categories to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `user_custom` (optional, string) ... <dl><dt>user_custom</dt><dd>Sort order you specified on the Manage Categories screen.</dd><dt>created_by</dt><dd>Sort by the ID of user who created each categories. </dd><dt>id</dt><dd>Sort by its own ID.</dd><dt>basename</dt><dd>Sort by the basename of each categories.</dd><dt>label</dt><dd>Sort by the label of each categories.</dd></dl>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return categories in descending order.</dd><dt>ascend</dt><dd>Return categories in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Categories resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + top = `0` (optional, number) ... If set to 1, retrieves only top level categories. New in v2
    + includeIds (optional, string) ... The comma separated ID list of categories to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of categories to exclude from result.

+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
            "basename" : "news",
            "parent" : "0",
            "archiveLink" : "http://example.com/news/index.html",
            "updatable" : false,
            "label" : "News",
            "class" : "category",
            "id" : 2,
            "blog" : {
              "id" : "1"
            },
            "description" : null
          ]
        }

## listChildCategories [/sites/{site_id}/categories/{category_id}/children(?maxDepth, includeCurrent)]

### New in v2.0: Retrieve child categories from the specified category. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of categories.
404 | Not Found | Site or Category not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + category_id (required, number) ... The category ID.
    + maxDepth = `0` (optional, number) ... The depth of retrieving parent categories.
    + includeCurrent = `0` (optional, number) ... <dl><dt>1</dt><dd>The list does not include current category.</dd><dt>0</dt><dd>The list includes current category.</dd></dl>

+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
            "basename" : "news",
            "parent" : "0",
            "archiveLink" : "http://example.com/news/index.html",
            "updatable" : false,
            "label" : "News",
            "class" : "category",
            "id" : 2,
            "blog" : {
              "id" : "1"
            },
            "description" : null
          ]
        }

## createCategory [/sites/{site_id}/categories]

### New in v2.0: Create a new category. [GET]
+ Authorization is required.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to create a new category.
404 | Not Found | Site not found.

**Permission**

+ Manage Categories

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
category | Object | Yes | | Single Categories resource

+ Parameters
    + site_id (required, number) ... The site ID.

+ Request Assets resource

    + Headers
    
            Content-Type: application/x-www-form-urlencoded

    + Body
    
            category={"basename" : "news","parent" : "0","archiveLink" : "http://example.com/news/index.html","updatable" : false,"label" : "News","class" : "category","id" : "1","blog" : {"id" : "1"},"description" : null,"customFields" : [{"basename" : "bannerImage","value" : "http://example.com/images/banner.jpg"}]}

+ Response 200 (application/json)
  
        {
          "totalResults" : "1",
          "items" : [
            {
            "basename" : "news",
            "parent" : "0",
            "archiveLink" : "http://example.com/news/index.html",
            "updatable" : false,
            "label" : "News",
            "class" : "category",
            "id" : 2,
            "blog" : {
              "id" : "1"
            },
            "description" : null
          ]
        }

## getCategory [/sites/{site_id}/categories/{category_id}(?fields)]

### New in v2.0: Retrieve single category by its ID. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve an category.
404 | Not Found | Category or site not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + category_id (required, number) ... The category ID.
    + fields (optional, string) ... The field list to retrieve as part of the Categories resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "basename" : "news",
          "parent" : "0",
          "archiveLink" : "http://example.com/news/index.html",
          "updatable" : false,
          "label" : "News",
          "class" : "category",
          "id" : 2,
          "blog" : {
            "id" : "1"
          },
          "description" : null
        }

## updateCategory and deleteCategory [/sites/{site_id}/categories/{category_id}]

### New in v2.0: Update an existing category. [PUT]
+ Authorization is required.
+ This method accepts PUT and POST with __method=PUT.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to update a category.
404 | Not Found | Site or Category not found.

**Permission**

+ Manage Categories

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
category | Object | Yes | | Single Categories resource

+ Parameters
    + site_id (required, number) ... The site ID.
    + category_id (required, number) ... The category ID.

+ Request Categories resource

    + Headers
    
            Content-Type: application/x-www-form-urlencoded

    + Body
    
            category={"basename" : "news","parent" : "0","archiveLink" : "http://example.com/news/index.html","updatable" : false,"label" : "News","class" : "category","id" : "1","blog" : {"id" : "1"},"description" : null,"customFields" : [{"basename" : "bannerImage","value" : "http://example.com/images/banner.jpg"}]}

+ Response 200 (application/json)

        {
          "basename" : "news",
          "parent" : "0",
          "archiveLink" : "http://example.com/news/index.html",
          "updatable" : false,
          "label" : "News",
          "class" : "category",
          "id" : 2,
          "blog" : {
            "id" : "1"
          },
          "description" : null
        }

### New in v2.0: Delete an existing category. [DELETE]
+ Authorization is required.
+ This method accepts DELETE and POST with __method=DELETE.
+ This method returns deleted Category resource.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to delete a category.
404 | Not Found | Site or Category not found.

**Permission**

+ Manage Categories

+ Parameters
    + site_id (required, number) ... The site ID.
    + category_id (required, number) ... The category ID.

+ Response 200 (application/json)

        {
          "basename" : "news",
          "parent" : "0",
          "archiveLink" : "http://example.com/news/index.html",
          "updatable" : false,
          "label" : "News",
          "class" : "category",
          "id" : 2,
          "blog" : {
            "id" : "1"
          },
          "description" : null
        }

## permutateCategories [/sites/{site_id}/categories/permutate]

### New in v2.0: Rearrange existing categories in a new order. [POST]
+ Authorization is required.
+ This method returns rearranged Categories resource.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to delete a category.
404 | Not Found | Site not found.

**Permission**

+ Manage Categories

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
categories | ARRAY | Yes | | Array of Categories resource that were rearranged.

+ Parameters
    + site_id (required, number) ... The site ID.

+ Request Assets resource

    + Headers
    
            Content-Type: application/x-www-form-urlencoded

    + Body
    
            category=[{"basename" : "news","parent" : "0","archiveLink" : "http://example.com/news/index.html","updatable" : false,"label" : "News","class" : "category","id" : "1","blog" : {"id" : "1"},"description" : null,"customFields" : [{"basename" : "bannerImage","value" : "http://example.com/images/banner.jpg"}]}]

+ Response 200 (application/json)

        [
          {
            "basename" : "news",
            "parent" : "0",
            "archiveLink" : "http://example.com/news/index.html",
            "updatable" : false,
            "label" : "News",
            "class" : "category",
            "id" : 2,
            "blog" : {
              "id" : "1"
            },
            "description" : null
          }
        ]

# Group Comments

This is the Comments resource.

Property Name | Type | Data Type | Database Column | Private | Read Only | Description | Version
------------ | ------------- | ------------ | ------------ | ------------- | ------------ | ------------ | ------------
author | Object | - | | | Y | The commenter of this comment. | v1
author.id | value | number | mt_comment.comment_commenter_id | Y | Y | The ID of this commenter. If commenter is not a registerd user, this field is empty. | v1
author.displayName | value | string | mt_comment.comment_author | | Y | The display name of this commenter. | v1
author.userpicUrl | value | number | | | Y | The URL of this commenter's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If a commenter is not a registered user or a commenter does not set own userpic, will be returned empty string. | v1
blog | Object | | | | Y | The blog of this comment. | v1
blog.id | value | number | mt_comment.comment_blog_id | | Y | The ID of the blog that contains this comment. | v1
body | value | string | mt_comment.comment_text | | | The contents of this comment. | v1
createdBy | Object | - | | | Y | The created user of this comment. In most cases, this is alias of `author`.| v2
createdBy.id | value | number | mt_comment.comment_created_by | Y | Y | The ID of created user. | v2
createdBy.displayName | value | string | | | Y | The display name of created user. | v2
createdBy.userpicUrl | value | string | | | Y | The URL of created user's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
createdDate | value | iso 8601 datetime | mt_comment.comment_created_on | | Y | The created time for this comment. | v2
customFields | ARRAY | - | | | | The list of customfields data for this category. | v1
customFields.basename | value | string | mt_field.field_basename | | | The basename of this customfield. | v1
customFields.value | value | string | | | | The value of this customfield. | v1
date | value | iso 8601 datetime | mt_comment.comment_created_on | | Y | The creation time for this comment. This property is marked as deprecated in v2.0.| v1
entry | Object | - | | | Y | The container entry of this comment. | v1
entry.id | value | number | mt_comment.comment_entry_id | | Y | The ID of the entry that contains this comment. | v1
id | value | number | mt_comment.comment_id | | Y | The ID of this comment. | v1
link | value | string | | | Y | The permalink for this comment. | v1
modifiedBy | Object | - | | | Y | The last modified user of this comment. | v2
modifiedBy.displayName | value | string | | | Y | The display name of last modified user. | v2
modifiedBy.id | value | number | mt_comment.comment_modified_by | Y | Y | The ID of last modified user. | v2
modifiedBy.userpicUrl | value | string | | | Y | The URL of last modified user's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
modifiedDate | value | iso 8601 datetime | mt_comment.comment_modified_on | | Y | The last modified time for this comment. | v2
parent | value | number | mt_comment.comment_parent_id | | | The ID of the parent of this comment. If this comment is not a reply, will be returned as null. | v1
status | value | string | | | | The publishing status of this comment. <dl><dt>Approved</dt><dd>This comment has been approved.<br />In the database, comment_visible = 1 and comment_junk_status = 1.</dd><dt>Pending</dt><dd>This comment has not been approved.<br />In the database, comment_visible = 0 and comment_junk_status = 1.</dd><dt>Spam</dt><dd>This comment has been marked as Spam.<br />In the database, comment_visible = 0 and comment_junk_status = -1.</dd></dl> | v1
updatable | value | boolean | | | Y | <dl><dt>true</dt><dd>The user who accessed can update this comment.</dd><dt>false</dt><dd>The user who accessed cannot update this comment.</dd> | v1

        {
          "link" : "http://example.com/blog/2014/11/hello-movable-type.html#comment-1",
          "parent" : null,
          "entry" : {
            "id" : "45"
          },
          "createdBy" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "status" : "Approved",
          "date" : "2014-11-05T14:41:39+09:00",
          "updatable" : false,
          "blog" : {
            "id" : "22"
          },
          "author" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "body" : "<p>Hi, congrats!</p>",
          "createdDate" : "2014-11-05T14:41:39+09:00",
          "id" : 1,
          "modifiedDate" : "2014-11-05T14:41:39+09:00",
          "customFields" : []
        }

## listComments [/sites/{site_id}/comments(?search, searchFields, limit, offset, sortBy, sortOrder, fields, includeIds, excludeIds, status, entryStatus)]

### Retrieve a list of comments in the specified site. [GET]

+ Authorization is required if want to include unpublished comments.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of comments.
404 | Not Found | Site not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + search (optional, string) ... Search query.
    + searchFields = `body` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of comments to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `id` (optional, string) ... The field name for sort.
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return comments in descending order.</dd><dt>ascend</dt><dd>Return comments in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Comments resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of comments to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of comments to exclude from result.
    + status (optional, string) ... Filter by status.<dl><dt>Approved</dt><dd>comment_visible is 1 and comment_junk_status is 1.</dd><dt>Pending</dt><dd>comment_visible is 0 and comment_junk_status is 1.</dd><dt>Spam</dt><dd>comment_junk_status is -1.</dd></dl>
    + entryStatus (optional, string) ... Filter by container entry's status. <dl><dt>Draft</dt><dd>entry_status is 1.</dd><dt>Publish</dt><dd>entry_status is 2.</dd><dt>Review</dt><dd>entry_status is 3.</dd><dt>Future</dt><dd>entry_status is 4.</dd><dt>Spam</dt><dd>entry_status is 5.</dd></dl>


+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
              "link" : "http://example.com/blog/2014/11/hello-movable-type.html#comment-1",
              "parent" : null,
              "entry" : {
                "id" : "45"
              },
              "createdBy" : {
                "id" : 2
                "userpicUrl" : null,
                "displayName" : "Ichiro Aikawa"
              },
              "status" : "Approved",
              "date" : "2014-11-05T14:41:39+09:00",
              "updatable" : false,
              "blog" : {
                "id" : "22"
              },
              "author" : {
                "id" : 2
                "userpicUrl" : null,
                "displayName" : "Ichiro Aikawa"
              },
              "body" : "<p>Hi, congrats!</p>",
              "createdDate" : "2014-11-05T14:41:39+09:00",
              "id" : 1,
              "modifiedDate" : "2014-11-05T14:41:39+09:00",
              "customFields" : []
            }
          ]
        }

## listCommentsForEntry [/sites/{site_id}/entries/{entry_id}/comments(?search, searchFields, limit, offset, sortBy, sortOrder, fields, includeIds, excludeIds, status)]

### Retrieve a list of comments for the specified entry. [GET]

+ Authorization is required if want to include unpublished comments.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of comments.
404 | Not Found | Site or Entry not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + entry_id (required, number) ... The entry ID.
    + search (optional, string) ... Search query.
    + searchFields = `body` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of comments to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `id` (optional, string) ... The field name for sort.
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return comments in descending order.</dd><dt>ascend</dt><dd>Return comments in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Comments resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of comments to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of comments to exclude from result.
    + status (optional, string) ... Filter by status.<dl><dt>Approved</dt><dd>comment_visible is 1 and comment_junk_status is 1.</dd><dt>Pending</dt><dd>comment_visible is 0 and comment_junk_status is 1.</dd><dt>Spam</dt><dd>comment_junk_status is -1.</dd></dl>

+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
              "link" : "http://example.com/blog/2014/11/hello-movable-type.html#comment-1",
              "parent" : null,
              "entry" : {
                "id" : "45"
              },
              "createdBy" : {
                "id" : 2
                "userpicUrl" : null,
                "displayName" : "Ichiro Aikawa"
              },
              "status" : "Approved",
              "date" : "2014-11-05T14:41:39+09:00",
              "updatable" : false,
              "blog" : {
                "id" : "22"
              },
              "author" : {
                "id" : 2
                "userpicUrl" : null,
                "displayName" : "Ichiro Aikawa"
              },
              "body" : "<p>Hi, congrats!</p>",
              "createdDate" : "2014-11-05T14:41:39+09:00",
              "id" : 1,
              "modifiedDate" : "2014-11-05T14:41:39+09:00",
              "customFields" : []
            }
          ]
        }

## listCommentsForPage [/sites/{site_id}/pages/{page_id}/comments(?search, searchFields, limit, offset, sortBy, sortOrder, fields, includeIds, excludeIds, status)]

### Retrieve a list of comments for the specified page. [GET]

+ Authorization is required if want to include unpublished comments.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of comments.
404 | Not Found | Site or Page not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + page_id (required, number) ... The page ID.
    + search (optional, string) ... Search query.
    + searchFields = `body` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of comments to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `id` (optional, string) ... The field name for sort.
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return comments in descending order.</dd><dt>ascend</dt><dd>Return comments in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Comments resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of comments to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of comments to exclude from result.
    + status (optional, string) ... Filter by status.<dl><dt>Approved</dt><dd>comment_visible is 1 and comment_junk_status is 1.</dd><dt>Pending</dt><dd>comment_visible is 0 and comment_junk_status is 1.</dd><dt>Spam</dt><dd>comment_junk_status is -1.</dd></dl>

+ Response 200 (application/json)

        {
          "totalResults" : "1",
          "items" : [
            {
              "link" : "http://example.com/blog/2014/11/hello-movable-type.html#comment-1",
              "parent" : null,
              "entry" : {
                "id" : "45"
              },
              "createdBy" : {
                "id" : 2
                "userpicUrl" : null,
                "displayName" : "Ichiro Aikawa"
              },
              "status" : "Approved",
              "date" : "2014-11-05T14:41:39+09:00",
              "updatable" : false,
              "blog" : {
                "id" : "22"
              },
              "author" : {
                "id" : 2
                "userpicUrl" : null,
                "displayName" : "Ichiro Aikawa"
              },
              "body" : "<p>Hi, congrats!</p>",
              "createdDate" : "2014-11-05T14:41:39+09:00",
              "id" : 1,
              "modifiedDate" : "2014-11-05T14:41:39+09:00",
              "customFields" : []
            }
          ]
        }

## createComment [/sites/{site_id}/entries/{entry_id}/comments]

### Create a new comment for entry. [POST]

+ Authorization is required.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to create a new coment.
404 | Not Found | Site or Entry not found.

**Permission**

+ Comment

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
comment | Object | Yes | | Single Comments resource

+ Parameters
    + site_id (required, number) ... The site ID.
    + entry_id (required, number) ... The entry ID.

+ Request Assets resource

    + Headers
    
            Content-Type: application/x-www-form-urlencoded

    + Body
    
            comment={"body" : "This is a test comment.\nHe he he"}

+ Response 200 (application/json)
  
        {
          "link" : "http://example.com/blog/2014/11/hello-movable-type.html#comment-1",
          "parent" : null,
          "entry" : {
            "id" : "45"
          },
          "createdBy" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "status" : "Approved",
          "date" : "2014-11-05T14:41:39+09:00",
          "updatable" : false,
          "blog" : {
            "id" : "22"
          },
          "author" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "body" : "<p>Hi, congrats!</p>",
          "createdDate" : "2014-11-05T14:41:39+09:00",
          "id" : 1,
          "modifiedDate" : "2014-11-05T14:41:39+09:00",
          "customFields" : []
        }

## postNewCommentForEntry [/sites/{site_id}/pages/{page_id}/comments]

### New In v2.0: Create a new comment for page. [POST]

+ Authorization is required.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to create a new coment.
404 | Not Found | Site or Page not found.

**Permission**

+ Comment

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
comment | Object | Yes | | Single Comments resource

+ Parameters
    + site_id (required, number) ... The site ID.
    + page_id (required, number) ... The page ID.

+ Request Assets resource

    + Headers
    
            Content-Type: application/x-www-form-urlencoded

    + Body
    
            comment={"body" : "This is a test comment.\nHe he he"}

+ Response 200 (application/json)
  
        {
          "link" : "http://example.com/blog/2014/11/hello-movable-type.html#comment-1",
          "parent" : null,
          "entry" : {
            "id" : "45"
          },
          "createdBy" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "status" : "Approved",
          "date" : "2014-11-05T14:41:39+09:00",
          "updatable" : false,
          "blog" : {
            "id" : "22"
          },
          "author" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "body" : "<p>Hi, congrats!</p>",
          "createdDate" : "2014-11-05T14:41:39+09:00",
          "id" : 1,
          "modifiedDate" : "2014-11-05T14:41:39+09:00",
          "customFields" : []
        }

## createReplyComment [/sites/{site_id}/comments/{comment_id}/replies]

### Reply to specified comment. [POST]

+ Authorization is required.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to reply coment.
404 | Not Found | Site or Comment not found.

**Permission**

+ Comment

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
comment | Object | Yes | | Single Comments resource

+ Parameters
    + site_id (required, number) ... The site ID.
    + comment_id (required, number) ... The page ID.

+ Request Assets resource

    + Headers
    
            Content-Type: application/x-www-form-urlencoded

    + Body
    
            comment={"body" : "This is a test comment.\nHe he he"}

+ Response 200 (application/json)
  
        {
          "link" : "http://example.com/blog/2014/11/hello-movable-type.html#comment-1",
          "parent" : null,
          "entry" : {
            "id" : "45"
          },
          "createdBy" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "status" : "Approved",
          "date" : "2014-11-05T14:41:39+09:00",
          "updatable" : false,
          "blog" : {
            "id" : "22"
          },
          "author" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "body" : "<p>Hi, congrats!</p>",
          "createdDate" : "2014-11-05T14:41:39+09:00",
          "id" : 1,
          "modifiedDate" : "2014-11-05T14:41:39+09:00",
          "customFields" : []
        }

## getComment [/sites/{site_id}/comments/{comment_id}(?fields)]

### Retrieve a single comment by its ID. [GET]

+ Authorization is required if the comment status is "unpublished". If the comment status is "published", then this method can be called without authorization.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the requested comment.
404 | Not Found | Site or Comment not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + comment_id (required, number) ... The comment ID.
    + fields (optional, string) ... The field list to retrieve as part of the Comments resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "link" : "http://example.com/blog/2014/11/hello-movable-type.html#comment-1",
          "parent" : null,
          "entry" : {
            "id" : "45"
          },
          "createdBy" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "status" : "Approved",
          "date" : "2014-11-05T14:41:39+09:00",
          "updatable" : false,
          "blog" : {
            "id" : "22"
          },
          "author" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "body" : "<p>Hi, congrats!</p>",
          "createdDate" : "2014-11-05T14:41:39+09:00",
          "id" : 1,
          "modifiedDate" : "2014-11-05T14:41:39+09:00",
          "customFields" : []
        }

## updateComment and deleteComment [/sites/{site_id}/comments/{comment_id}]

### Update an exsiting comment. [PUT]

+ Authorization is required.
+ This method accepts PUT and POST with __method=PUT.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to update the requested comment.
404 | Not Found | Site or Comment not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + comment_id (required, number) ... The comment ID.

+ Response 200 (application/json)

        {
          "link" : "http://example.com/blog/2014/11/hello-movable-type.html#comment-1",
          "parent" : null,
          "entry" : {
            "id" : "45"
          },
          "createdBy" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "status" : "Approved",
          "date" : "2014-11-05T14:41:39+09:00",
          "updatable" : false,
          "blog" : {
            "id" : "22"
          },
          "author" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "body" : "<p>Hi, congrats!</p>",
          "createdDate" : "2014-11-05T14:41:39+09:00",
          "id" : 1,
          "modifiedDate" : "2014-11-05T14:41:39+09:00",
          "customFields" : []
        }


### Delete an existing comment. [DELETE]

+ Authorization is required.
+ This method accepts PUT and POST with __method=DELETE.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to delete the requested comment.
404 | Not Found | Site or Comment not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + comment_id (required, number) ... The comment ID.

+ Response 200 (application/json)

        {
          "link" : "http://example.com/blog/2014/11/hello-movable-type.html#comment-1",
          "parent" : null,
          "entry" : {
            "id" : "45"
          },
          "createdBy" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "status" : "Approved",
          "date" : "2014-11-05T14:41:39+09:00",
          "updatable" : false,
          "blog" : {
            "id" : "22"
          },
          "author" : {
            "id" : 2
            "userpicUrl" : null,
            "displayName" : "Ichiro Aikawa"
          },
          "body" : "<p>Hi, congrats!</p>",
          "createdDate" : "2014-11-05T14:41:39+09:00",
          "id" : 1,
          "modifiedDate" : "2014-11-05T14:41:39+09:00",
          "customFields" : []
        }

# Group Entries

This is the Entries resource.

Property Name | Type | Data Type | Database Column | Private | Read Only | Description | Version
------------ | ------------- | ------------ | ------------ | ------------- | ------------ | ------------ | ------------
allowComments | value | boolean | mt_entry.entry_allow_comments |  |  | <dl><dt>false</dt><dd>This entry does not accepts comments. In the database, this value is 0.</dd><dt>true</dt><dd>This entry accepts comments. In the database, this value is 1.</dd></dl> | v1
allowTrackbacks | value | boolean | mt_entry.entry_allow_pings |  |  | <dl><dt>false</dt><dd>This entry does not accepts trackbacks. In the database, this value is 0.</dd><dt>true</dt><dd>This entry accepts trackbacks. In the database, this value is 1.</dd></dl> | v1
assets | ARRAY | Assets | | | Y | The list of related assets for this entry. | v1
author | Object | | | | Y | The author of this entry. | v1
author.displayName | value | string | mt_author.nickame | | Y | The display name of this entry creator. | v1
author.id | value | number | mt_entry.entry_author_id | Y | Y | The ID of this entry creator. | v1
author.userpicUrl | value | string | | | Y | The URL of this entry creator's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string.| v1
basename | value | string | mt_entry.entry_basename | | | The basename for this entry. | v1
blog | Object | | | | Y | The blog of this entry. | v1
blog.id | value | number | mt_entry.entry_blog_id | | Y | The ID of the blog that contains this entry. | v1
body | value | string | mt_entry.entry_text | | | The contents of this entry that the text format is applied. [update in v2] if you want to get the raw contents, you should sent a "no_text_filter=1" parameter with authenticated request. | v1
categories | ARRAY | Categories | | | | A list of categories associated with the entry. The first element of the array is the primary category. OTHER categories are sorted by label category. [Update in v2] The value of this property was changed from "category label" to "Categories object". | v1
class | value | string | mt_entry.entry_class | | Y | The object class for this entry. | v1
commentCount | value | number | mt_entry.entry_comment_count | | Y | The number of comments for this entry. | v1
comments | ARRAY | Comments | | | Y | The list of comments for this entry. The list is sorted by ID of the comment and The parent ID of the comment. | v1
createdDate | value | iso 8601 datetime | mt_entry.entry_created_on | | Y | The created time for this entry. | v1
customFields | ARRAY | Object | | | | The list of customfields data for this entry. | v1
customField.basename | value | string | mt_field.field_basename | | Y | The basename of this customfield. | v1
customField.value | value | string | | | | The value of this customfield. | v1
date | value | iso 8601 datetime | mt_entry.entry_authored_on | | | The published time for this entry. | v1
excerpt | value | string | mt_entry.entry_excerpt | | | The excerpt value of this entry if one is specified or, if not, an auto-generated excerpt from the Entry Body field followed by an ellipsis (“…”). If an excerpt is auto-generated also note that any HTML is stripped. The length of the auto-generated output of this tag can be set in the blog’s Entry Settings. | v1
format | value | string | mt_entry.entry_convert_breaks | Y | | The text format of this entry. | v2
id | value | number | mt_entry.entry_id | | Y | The ID of this entry. | v1
keywords | value | string | mt_entry.entry_keywords | | | The keywords text for this entry. | v1
modifiedDate | value | iso 8601 datetime | mt_entry.entry_modified_on | | Y | The last modified time for this entry. | v1
more | value | string | mt_entry.entry_text_more | | | The extended contents for this entry.  [update in v2] if you want to get the raw contents, you should sent a "no_text_filter=1" parameter with authenticated request. | v1
permalink | value | value | string | | Y | The parmalink URL for this entry. | v1
pingsSentUrl | ARRAY | string | || Y | The list of TrackBack pings sent from this entry. | v1
status | value | string | | | | <dl><dt>Draft</dt><dd>This entry is saved as draft.<br>entry_status is 1.</dd><dt>Publish</dt><dd>This entry is published.<br>entry_status is 2.</dd><dt>Review</dt><dd>This entry is waiting for approval.<br>entry_status is 3.</dd><dt>Future</dt><dd>This entry is scheduled for future publishing.<br>entry_status is 4.</dd><dt>Spam</dt><dd>This entry is marked as Spam.<br>entry_status is 5.</dd></dl> | v1
tags | ARRAY | string | | | | The list of entry tags for this entry. | v1
title | value | string | mt_entry.entry_title | | | The title of this entry. | v1
trackbackCount | value | number | mt_entry.entry_comment_count | | | The number of received trackbacks for this entry. | v1
trackbacks | ARRAY | Trackbacks | | | Y | The list of received trackbacks for this entry. The list is sorted by the ID of trackback. | v1
updatable | value | boolean | | | Y | <dl><dt>true</dt><dd>The user who accessed can update this entry.</dd><dt>false</dt><dd>The user who accessed cannot update this entry.</dd></dl> | v1

        {
          "excerpt" : "We are excited to announce that Six Apar...",
          "status" : "Publish",
          "date" : "2014-11-14T13:08:42¥u002b09:00",
          "updatable" : false,
          "author" : {
            "userpicUrl" : null,
            "displayName" : "Yuji Takayama"
          },
          "allowComments" : true,
          "comments" : [],
          "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
          "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
          "keywords" : "",
          "allowTrackbacks" : false,
          "id" : 5,
          "trackbacks" : [],
          "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
          "trackbackCount" : "0",
          "categories" : [],
          "blog" : {
            "id" : "1"
          },
          "commentCount" : "0",
          "tags" : [],
          "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
          "assets" : [],
          "pingsSentUrl" : [],
          "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
          "class" : "entry",
          "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
          "more" : "",
          "customFields" : [
            {
              "basename" : "place",
              "value" : "New York City"
            },
            {
              "basename" : "agenda",
              "value" : "Movable Type¥nTopics"
            }
          ]
        }

## listEntries [/sites/{site_id}/entries(?search, searchFields, limit, offset, sortBy, sortOrder, fields, includeIds, excludeIds, status, maxComments, maxTrackbacks, no_text_filter)]

### Retrieve a list of entries in the specified site. [GET]

+ Authorization is required if want to include unpublished entries.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of entries.
404 | Not Found | Site not found.

**Permissions**

+ edit_entry
    + for retrieve unpublished entry

+ Parameters
    + site_id (required, number) ... The site ID.
    + search (optional, string) ... Search query.
    + searchFields = `title,body,more,keywords,excerpt,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of entries to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `authored_on` (optional, string) ... The field name for sort. You can specify one of following values<ul><li>authored_on</li><li>title</li><li>created_on</li><li>modified_on</li></ul>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return entries in descending order.</dd><dt>ascend</dt><dd>Return entries in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Entries resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of entries to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of entries to exclude from result.
    + status (optional, string) ... Filter by container entry's status. <dl><dt>Draft</dt><dd>entry_status is 1.</dd><dt>Publish</dt><dd>entry_status is 2.</dd><dt>Review</dt><dd>entry_status is 3.</dd><dt>Future</dt><dd>entry_status is 4.</dd><dt>Spam</dt><dd>entry_status is 5.</dd></dl>
    + maxComments (optional, number) ... This is an optional parameter. Maximum number of comments to retrieve as part of the Entries resource. If this parameter is not supplied, no comments will be returned.
    + maxTrackbacks (optional, number) ... This is an optional parameter. Maximum number of received trackbacks to retrieve as part of the Entries resource. If this parameter is not supplied, no trackbacks will be returned.
    + no_text_filter = `0` (optional, number) ... If you want to fetch the raw text, set to '1'. New in v2

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
            {
              "excerpt" : "We are excited to announce that Six Apar...",
              "status" : "Publish",
              "date" : "2014-11-14T13:08:42¥u002b09:00",
              "updatable" : false,
              "author" : {
                "userpicUrl" : null,
                "displayName" : "Yuji Takayama"
              },
              "allowComments" : true,
              "comments" : [],
              "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
              "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
              "keywords" : "",
              "allowTrackbacks" : false,
              "id" : 5,
              "trackbacks" : [],
              "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
              "trackbackCount" : "0",
              "categories" : [],
              "blog" : {
                "id" : "1"
              },
              "commentCount" : "0",
              "tags" : [],
              "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
              "assets" : [],
              "pingsSentUrl" : [],
              "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
              "class" : "entry",
              "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
              "more" : "",
              "customFields" : [
                {
                  "basename" : "place",
                  "value" : "New York City"
                },
                {
                  "basename" : "agenda",
                  "value" : "Movable Type¥nTopics"
                }
              ]
            }
          ]
        }

## listEntriesForCategory [/sites/{site_id}/categories/{category_id}/entries(?search, searchFields, limit, offset, sortBy, sortOrder, fields, includeIds, excludeIds, status, maxComments, maxTrackbacks, no_text_filter)]

### New in v2.0: Retrieve a list of entries by specific category. [GET]

+ Authorization is required if want to include unpublished entries.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of entries.
404 | Not Found | Site or Category not found.

**Permissions**

+ edit_entry
    + for retrieve unpublished entry

+ Parameters
    + site_id (required, number) ... The site ID.
    + category_id (required, number) ... The category ID.
    + search (optional, string) ... Search query.
    + searchFields = `title,body,more,keywords,excerpt,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of entries to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `authored_on` (optional, string) ... The field name for sort. You can specify one of following values<ul><li>authored_on</li><li>title</li><li>created_on</li><li>modified_on</li></ul>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return entries in descending order.</dd><dt>ascend</dt><dd>Return entries in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Entries resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of entries to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of entries to exclude from result.
    + status (optional, string) ... Filter by container entry's status. <dl><dt>Draft</dt><dd>entry_status is 1.</dd><dt>Publish</dt><dd>entry_status is 2.</dd><dt>Review</dt><dd>entry_status is 3.</dd><dt>Future</dt><dd>entry_status is 4.</dd><dt>Spam</dt><dd>entry_status is 5.</dd></dl>
    + maxComments (optional, number) ... This is an optional parameter. Maximum number of comments to retrieve as part of the Entries resource. If this parameter is not supplied, no comments will be returned.
    + maxTrackbacks (optional, number) ... This is an optional parameter. Maximum number of received trackbacks to retrieve as part of the Entries resource. If this parameter is not supplied, no trackbacks will be returned.
    + no_text_filter = `0` (optional, number) ... If you want to fetch the raw text, set to '1'. New in v2

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
            {
              "excerpt" : "We are excited to announce that Six Apar...",
              "status" : "Publish",
              "date" : "2014-11-14T13:08:42¥u002b09:00",
              "updatable" : false,
              "author" : {
                "userpicUrl" : null,
                "displayName" : "Yuji Takayama"
              },
              "allowComments" : true,
              "comments" : [],
              "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
              "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
              "keywords" : "",
              "allowTrackbacks" : false,
              "id" : 5,
              "trackbacks" : [],
              "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
              "trackbackCount" : "0",
              "categories" : [],
              "blog" : {
                "id" : "1"
              },
              "commentCount" : "0",
              "tags" : [],
              "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
              "assets" : [],
              "pingsSentUrl" : [],
              "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
              "class" : "entry",
              "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
              "more" : "",
              "customFields" : [
                {
                  "basename" : "place",
                  "value" : "New York City"
                },
                {
                  "basename" : "agenda",
                  "value" : "Movable Type¥nTopics"
                }
              ]
            }
          ]
        }

## listEntriesForAsset [/sites/{site_id}/assets/{asset_id}/entries(?search, searchFields, limit, offset, sortBy, sortOrder, fields, includeIds, excludeIds, status, maxComments, maxTrackbacks, no_text_filter)]

### New in v2.0: Retrieve a list of entries that related with specific asset. [GET]

+ Authorization is required if want to include unpublished entries.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of entries.
404 | Not Found | Site or Asset not found.

**Permissions**

+ edit_entry
    + for retrieve unpublished entry

+ Parameters
    + site_id (required, number) ... The site ID.
    + asset_id (required, number) ... The asset ID.
    + search (optional, string) ... Search query.
    + searchFields = `title,body,more,keywords,excerpt,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of entries to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `authored_on` (optional, string) ... The field name for sort. You can specify one of following values<ul><li>authored_on</li><li>title</li><li>created_on</li><li>modified_on</li></ul>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return entries in descending order.</dd><dt>ascend</dt><dd>Return entries in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Entries resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of entries to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of entries to exclude from result.
    + status (optional, string) ... Filter by container entry's status. <dl><dt>Draft</dt><dd>entry_status is 1.</dd><dt>Publish</dt><dd>entry_status is 2.</dd><dt>Review</dt><dd>entry_status is 3.</dd><dt>Future</dt><dd>entry_status is 4.</dd><dt>Spam</dt><dd>entry_status is 5.</dd></dl>
    + maxComments (optional, number) ... This is an optional parameter. Maximum number of comments to retrieve as part of the Entries resource. If this parameter is not supplied, no comments will be returned.
    + maxTrackbacks (optional, number) ... This is an optional parameter. Maximum number of received trackbacks to retrieve as part of the Entries resource. If this parameter is not supplied, no trackbacks will be returned.
    + no_text_filter = `0` (optional, number) ... If you want to fetch the raw text, set to '1'. New in v2

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
            {
              "excerpt" : "We are excited to announce that Six Apar...",
              "status" : "Publish",
              "date" : "2014-11-14T13:08:42¥u002b09:00",
              "updatable" : false,
              "author" : {
                "userpicUrl" : null,
                "displayName" : "Yuji Takayama"
              },
              "allowComments" : true,
              "comments" : [],
              "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
              "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
              "keywords" : "",
              "allowTrackbacks" : false,
              "id" : 5,
              "trackbacks" : [],
              "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
              "trackbackCount" : "0",
              "categories" : [],
              "blog" : {
                "id" : "1"
              },
              "commentCount" : "0",
              "tags" : [],
              "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
              "assets" : [],
              "pingsSentUrl" : [],
              "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
              "class" : "entry",
              "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
              "more" : "",
              "customFields" : [
                {
                  "basename" : "place",
                  "value" : "New York City"
                },
                {
                  "basename" : "agenda",
                  "value" : "Movable Type¥nTopics"
                }
              ]
            }
          ]
        }

## listEntriesForSiteAndTag [/sites/{site_id}/tags/{tag_id}/entries(?search, searchFields, limit, offset, sortBy, sortOrder, fields, includeIds, excludeIds, status, status, maxComments, maxTrackbacks, no_text_filter)]

### New in v2.0: Retrieve a list of entries that related with specific tag. [GET]

+ Authorization is required if want to include unpublished entries.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of entries.
404 | Not Found | Site or Tag not found.

**Permissions**

+ edit_entry
    + for retrieve unpublished entry

+ Parameters
    + site_id (required, number) ... The site ID.
    + tag_id (required, number) ... The tag ID.
    + search (optional, string) ... Search query.
    + searchFields = `title,body,more,keywords,excerpt,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of entries to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `authored_on` (optional, string) ... The field name for sort. You can specify one of following values<ul><li>authored_on</li><li>title</li><li>created_on</li><li>modified_on</li></ul>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return entries in descending order.</dd><dt>ascend</dt><dd>Return entries in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Entries resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of entries to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of entries to exclude from result.
    + status (optional, string) ... Filter by container entry's status. <dl><dt>Draft</dt><dd>entry_status is 1.</dd><dt>Publish</dt><dd>entry_status is 2.</dd><dt>Review</dt><dd>entry_status is 3.</dd><dt>Future</dt><dd>entry_status is 4.</dd><dt>Spam</dt><dd>entry_status is 5.</dd></dl>
    + maxComments (optional, number) ... This is an optional parameter. Maximum number of comments to retrieve as part of the Entries resource. If this parameter is not supplied, no comments will be returned.
    + maxTrackbacks (optional, number) ... This is an optional parameter. Maximum number of received trackbacks to retrieve as part of the Entries resource. If this parameter is not supplied, no trackbacks will be returned.
    + no_text_filter = `0` (optional, number) ... If you want to fetch the raw text, set to '1'. New in v2

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
            {
              "excerpt" : "We are excited to announce that Six Apar...",
              "status" : "Publish",
              "date" : "2014-11-14T13:08:42¥u002b09:00",
              "updatable" : false,
              "author" : {
                "userpicUrl" : null,
                "displayName" : "Yuji Takayama"
              },
              "allowComments" : true,
              "comments" : [],
              "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
              "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
              "keywords" : "",
              "allowTrackbacks" : false,
              "id" : 5,
              "trackbacks" : [],
              "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
              "trackbackCount" : "0",
              "categories" : [],
              "blog" : {
                "id" : "1"
              },
              "commentCount" : "0",
              "tags" : [],
              "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
              "assets" : [],
              "pingsSentUrl" : [],
              "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
              "class" : "entry",
              "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
              "more" : "",
              "customFields" : [
                {
                  "basename" : "place",
                  "value" : "New York City"
                },
                {
                  "basename" : "agenda",
                  "value" : "Movable Type¥nTopics"
                }
              ]
            }
          ]
        }

## createEntry [/sites/{site_id}/entries]

### Create a new entry. [POST]

+ Authorization is required.

**Update in v2.0**
 
 + You can attach categories and assets in the one request.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to create a new entry.
404 | Not Found | Site not found.

**Permissions**

+ create_post

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
entry | Object | Yes | | Single Entries resource

+ Parameters
    + site_id (required, number) ... The site ID.

+ Request Entries resource

    + Headers
    
            Content-Type: application/x-www-form-urlencoded

    + Body
    
            entry={"excerpt" : "We are excited to announce that Six Apar...","status" : "Publish","allowComments" : true,"body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e","keywords" : "","allowTrackbacks" : false,"basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades","title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades","more" : "","customFields" : [{"basename" : "place","value" : "New York City"},{"basename" : "agenda","value" : "Movable Type¥nTopics"}]}

+ Response 200 (application/json)
  
        {
          "excerpt" : "We are excited to announce that Six Apar...",
          "status" : "Publish",
          "date" : "2014-11-14T13:08:42¥u002b09:00",
          "updatable" : false,
          "author" : {
            "userpicUrl" : null,
            "displayName" : "Yuji Takayama"
          },
          "allowComments" : true,
          "comments" : [],
          "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
          "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
          "keywords" : "",
          "allowTrackbacks" : false,
          "id" : 5,
          "trackbacks" : [],
          "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
          "trackbackCount" : "0",
          "categories" : [],
          "blog" : {
            "id" : "1"
          },
          "commentCount" : "0",
          "tags" : [],
          "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
          "assets" : [],
          "pingsSentUrl" : [],
          "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
          "class" : "entry",
          "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
          "more" : "",
          "customFields" : [
            {
              "basename" : "place",
              "value" : "New York City"
            },
            {
              "basename" : "agenda",
              "value" : "Movable Type¥nTopics"
            }
          ]
        }

## getEntry [/sites/{site_id}/entries/{entry_id}(?fields)]

### Retrieve a single entry by its ID. [GET]

+ Authorization is required if the entry status is "unpublished". If the entry status is "published", then this method can be called without authorization.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the requested entry.
404 | Not Found | Site or Entry not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + entry_id (required, number) ... The entry ID.
    + fields (optional, string) ... The field list to retrieve as part of the Entries resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "excerpt" : "We are excited to announce that Six Apar...",
          "status" : "Publish",
          "date" : "2014-11-14T13:08:42¥u002b09:00",
          "updatable" : false,
          "author" : {
            "userpicUrl" : null,
            "displayName" : "Yuji Takayama"
          },
          "allowComments" : true,
          "comments" : [],
          "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
          "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
          "keywords" : "",
          "allowTrackbacks" : false,
          "id" : 5,
          "trackbacks" : [],
          "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
          "trackbackCount" : "0",
          "categories" : [],
          "blog" : {
            "id" : "1"
          },
          "commentCount" : "0",
          "tags" : [],
          "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
          "assets" : [],
          "pingsSentUrl" : [],
          "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
          "class" : "entry",
          "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
          "more" : "",
          "customFields" : [
            {
              "basename" : "place",
              "value" : "New York City"
            },
            {
              "basename" : "agenda",
              "value" : "Movable Type¥nTopics"
            }
          ]
        }


## updateEntry and deleteEntry [/sites/{site_id}/entries/{entry_id}]

### Update an existing entry. [PUT]

+ Authorization is required.
+ This method accepts PUT and POST with __method=PUT.

**Update in v2.0**
 
 + You can attach/detach categories and assets in the one request.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to update the speciied entry.
404 | Not Found | Site or Entry not found.

**Permissions**

+ edit_entry
    + for retrieve unpublished entry

+ Parameters
    + site_id (required, number) ... The site ID.
    + entry_id (required, number) ... The entry ID.

+ Request Entries resource

    + Headers
    
            Content-Type: application/x-www-form-urlencoded

    + Body
    
            entry={"excerpt" : "We are excited to announce that Six Apar...","status" : "Publish","allowComments" : true,"body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e","keywords" : "","allowTrackbacks" : false,"basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades","title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades","more" : "","customFields" : [{"basename" : "place","value" : "New York City"},{"basename" : "agenda","value" : "Movable Type¥nTopics"}]}

+ Response 200 (application/json)
  
        {
          "excerpt" : "We are excited to announce that Six Apar...",
          "status" : "Publish",
          "date" : "2014-11-14T13:08:42¥u002b09:00",
          "updatable" : false,
          "author" : {
            "userpicUrl" : null,
            "displayName" : "Yuji Takayama"
          },
          "allowComments" : true,
          "comments" : [],
          "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
          "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
          "keywords" : "",
          "allowTrackbacks" : false,
          "id" : 5,
          "trackbacks" : [],
          "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
          "trackbackCount" : "0",
          "categories" : [],
          "blog" : {
            "id" : "1"
          },
          "commentCount" : "0",
          "tags" : [],
          "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
          "assets" : [],
          "pingsSentUrl" : [],
          "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
          "class" : "entry",
          "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
          "more" : "",
          "customFields" : [
            {
              "basename" : "place",
              "value" : "New York City"
            },
            {
              "basename" : "agenda",
              "value" : "Movable Type¥nTopics"
            }
          ]
        }

### Delete an existing entry. [DELETE]

+ Authorization is required.
This method accepts PUT and POST with __method=DELETE.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to delete the speciied entry.
404 | Not Found | Site or Entry not found.

**Permissions**

+ edit_entry
    + for retrieve unpublished entry

+ Parameters
    + site_id (required, number) ... The site ID.
    + entry_id (required, number) ... The entry ID.

+ Response 200 (application/json)
  
        {
          "excerpt" : "We are excited to announce that Six Apar...",
          "status" : "Publish",
          "date" : "2014-11-14T13:08:42¥u002b09:00",
          "updatable" : false,
          "author" : {
            "userpicUrl" : null,
            "displayName" : "Yuji Takayama"
          },
          "allowComments" : true,
          "comments" : [],
          "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
          "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
          "keywords" : "",
          "allowTrackbacks" : false,
          "id" : 5,
          "trackbacks" : [],
          "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
          "trackbackCount" : "0",
          "categories" : [],
          "blog" : {
            "id" : "1"
          },
          "commentCount" : "0",
          "tags" : [],
          "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
          "assets" : [],
          "pingsSentUrl" : [],
          "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
          "class" : "entry",
          "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
          "more" : "",
          "customFields" : [
            {
              "basename" : "place",
              "value" : "New York City"
            },
            {
              "basename" : "agenda",
              "value" : "Movable Type¥nTopics"
            }
          ]
        }

# Group Pages

This is the Pages resource.

Property Name | Type | Data Type | Database Column | Private | Read Only | Description | Version
------------ | ------------- | ------------ | ------------ | ------------- | ------------ | ------------ | ------------
allowComments | value | boolean | mt_entry.entry_allow_comments |  |  | <dl><dt>false</dt><dd>This page does not accepts comments. In the database, this value is 0.</dd><dt>true</dt><dd>This page accepts comments. In the database, this value is 1.</dd></dl> | v2
allowTrackbacks | value | boolean | mt_entry.entry_allow_pings |  |  | <dl><dt>false</dt><dd>This page does not accepts trackbacks. In the database, this value is 0.</dd><dt>true</dt><dd>This page accepts trackbacks. In the database, this value is 1.</dd></dl> | v2
assets | ARRAY | Assets | | | Y | The list of related assets for this page. | v2
author | Object | | | | Y | The author of this page. | v2
author.displayName | value | string | mt_author.nickame | | Y | The display name of this page creator. | v2
author.id | value | number | mt_entry.entry_author_id | Y | Y | The ID of this page creator. | v2
author.userpicUrl | value | string | | | Y | The URL of this page creator's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string.| v2
basename | value | string | mt_entry.entry_basename | | | The basename for this page. | v2
blog | Object | | | | Y | The blog of this page. | v2
blog.id | value | number | mt_entry.entry_blog_id | | Y | The ID of the blog that contains this page. | v2
body | value | string | mt_entry.entry_text | | | The contents of this page that the text format is applied. [update in v2] if you want to get the raw contents, you should sent a "no_text_filter=1" parameter with authenticated request. | v2
folder | Object | Folder | | | | The container folder of this page. | v2
class | value | string | mt_entry.entry_class | | Y | The object class for this page. | v2
commentCount | value | number | mt_entry.entry_comment_count | | Y | The number of comments for this page. | v2
comments | ARRAY | Comments | | | Y | The list of comments for this page. The list is sorted by ID of the comment and The parent ID of the comment. | v2
createdDate | value | iso 8601 datetime | mt_entry.entry_created_on | | Y | The created time for this page. | v2
customFields | ARRAY | Object | | | | The list of customfields data for this page. | v2
customField.basename | value | string | mt_field.field_basename | | Y | The basename of this customfield. | v2
customField.value | value | string | | | | The value of this customfield. | v2
date | value | iso 8601 datetime | mt_entry.entry_authored_on | | | The published time for this page. | v2
excerpt | value | string | mt_entry.entry_excerpt | | | The excerpt value of this page if one is specified or, if not, an auto-generated excerpt from the page Body field followed by an ellipsis (“…”). If an excerpt is auto-generated also note that any HTML is stripped. The length of the auto-generated output of this tag can be set in the blog’s page Settings. | v2
format | value | string | mt_entry.entry_convert_breaks | Y | | The text format of this page. | v2
id | value | number | mt_entry.entry_id | | Y | The ID of this page. | v2
keywords | value | string | mt_entry.entry_keywords | | | The keywords text for this page. | v2
modifiedDate | value | iso 8601 datetime | mt_entry.entry_modified_on | | Y | The last modified time for this page. | v2
more | value | string | mt_entry.entry_text_more | | | The extended contents for this page. if you want to get the raw contents, you should sent a "no_text_filter=1" parameter with authenticated request. | v2
permalink | value | value | string | | Y | The parmalink URL for this page. | v2
pingsSentUrl | ARRAY | string | || Y | The list of TrackBack pings sent from this page. | v2
status | value | string | | | | <dl><dt>Draft</dt><dd>This page is saved as draft.<br>status is 1.</dd><dt>Publish</dt><dd>This page is published.<br>status is 2.</dd><dt>Review</dt><dd>This page is waiting for approval.<br>status is 3.</dd><dt>Future</dt><dd>This page is scheduled for future publishing.<br>status is 4.</dd><dt>Spam</dt><dd>This page is marked as Spam.<br>status is 5.</dd></dl> | v2
tags | ARRAY | string | | | | The list of page tags for this page. | v2
title | value | string | mt_entry.entry_title | | | The title of this page. | v2
trackbackCount | value | number | mt_entry.entry_comment_count | | | The number of received trackbacks for this page. | v2
trackbacks | ARRAY | Trackbacks | | | Y | The list of received trackbacks for this page. The list is sorted by the ID of trackback. | v2
updatable | value | boolean | | | Y | <dl><dt>true</dt><dd>The user who accessed can update this entry.</dd><dt>false</dt><dd>The user who accessed cannot update this page.</dd></dl> | v2

        {
          "excerpt" : "We are excited to announce that Six Apar...",
          "status" : "Publish",
          "date" : "2014-11-14T13:08:42¥u002b09:00",
          "updatable" : false,
          "author" : {
            "userpicUrl" : null,
            "displayName" : "Yuji Takayama"
          },
          "allowComments" : true,
          "comments" : [],
          "permalink" : "http://localhost/news/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
          "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
          "keywords" : "",
          "allowTrackbacks" : false,
          "id" : 5,
          "trackbacks" : [],
          "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
          "trackbackCount" : "0",
          "folder" : {
            "id" : 2,
            "parent" : 1,
            "label" : "news"
          },
          "blog" : {
            "id" : "1"
          },
          "commentCount" : "0",
          "tags" : [],
          "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
          "assets" : [],
          "pingsSentUrl" : [],
          "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
          "class" : "entry",
          "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
          "more" : "",
          "customFields" : [
            {
              "basename" : "place",
              "value" : "New York City"
            },
            {
              "basename" : "agenda",
              "value" : "Movable Type¥nTopics"
            }
          ]
        }

## listPages [/sites/{site_id}/pages(?search, searchFields, limit, offset, sortBy, sortOrder, fields, includeIds, excludeIds, status, maxComments, maxTrackbacks, no_text_filter)]

### New in v2.0: Retrieve a list of pages in the specified site. [GET]

+ Authorization is required if want to include unpublished pages.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of pages.
404 | Not Found | Site not found.

**Permissions**

+ manage_pages
    + for retrieve unpublished page

+ Parameters
    + site_id (required, number) ... The site ID.
    + search (optional, string) ... Search query.
    + searchFields = `title,body,more,keywords,excerpt,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of pages to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `modified_on` (optional, string) ... The field name for sort. You can specify one of following values<ul><li>authored_on</li><li>title</li><li>created_on</li><li>modified_on</li></ul>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return pages in descending order.</dd><dt>ascend</dt><dd>Return pages in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Pages resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of pages to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of pages to exclude from result.
    + status (optional, string) ... Filter by container page's status. <dl><dt>Draft</dt><dd>status is 1.</dd><dt>Publish</dt><dd>status is 2.</dd><dt>Review</dt><dd>status is 3.</dd><dt>Future</dt><dd>status is 4.</dd><dt>Spam</dt><dd>status is 5.</dd></dl>
    + maxComments (optional, number) ... This is an optional parameter. Maximum number of pages to retrieve as part of the Pages resource. If this parameter is not supplied, no pages will be returned.
    + maxTrackbacks (optional, number) ... This is an optional parameter. Maximum number of received trackbacks to retrieve as part of the Pages resource. If this parameter is not supplied, no trackbacks will be returned.
    + no_text_filter = `0` (optional, number) ... If you want to fetch the raw text, set to '1'. New in v2

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
            {
              "excerpt" : "We are excited to announce that Six Apar...",
              "status" : "Publish",
              "date" : "2014-11-14T13:08:42¥u002b09:00",
              "updatable" : false,
              "author" : {
                "userpicUrl" : null,
                "displayName" : "Yuji Takayama"
              },
              "allowComments" : true,
              "comments" : [],
              "permalink" : "http://localhost/news/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
              "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
              "keywords" : "",
              "allowTrackbacks" : false,
              "id" : 5,
              "trackbacks" : [],
              "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
              "trackbackCount" : "0",
              "folder" : {
                "id" : 2,
                "parent" : 1,
                "label" : "news"
              },
              "blog" : {
                "id" : "1"
              },
              "commentCount" : "0",
              "tags" : [],
              "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
              "assets" : [],
              "pingsSentUrl" : [],
              "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
              "class" : "entry",
              "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
              "more" : "",
              "customFields" : [
                {
                  "basename" : "place",
                  "value" : "New York City"
                },
                {
                  "basename" : "agenda",
                  "value" : "Movable Type¥nTopics"
                }
              ]
            }
          ]
        }

## listPagesForFolder [/sites/{site_id}/folders/{folder_id}/pages(?search, searchFields, limit, offset, sortBy, sortOrder, fields, includeIds, excludeIds, status, maxComments, maxTrackbacks, no_text_filter)]

### New in v2.0: Retrieve a list of pages by specific folder. [GET]

+ Authorization is required if want to include unpublished pages.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of pages.
404 | Not Found | Site or Folder not found.

**Permissions**

+ manage_pages
    + for retrieve unpublished page

+ Parameters
    + site_id (required, number) ... The site ID.
    + folder_id (required, number) ... The folder ID.
    + search (optional, string) ... Search query.
    + searchFields = `title,body,more,keywords,excerpt,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of pages to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `modified_on` (optional, string) ... The field name for sort. You can specify one of following values<ul><li>authored_on</li><li>title</li><li>created_on</li><li>modified_on</li></ul>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return pages in descending order.</dd><dt>ascend</dt><dd>Return pages in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the  Pages resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of pages to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of pages to exclude from result.
    + status (optional, string) ... Filter by container page's status. <dl><dt>Draft</dt><dd>status is 1.</dd><dt>Publish</dt><dd>status is 2.</dd><dt>Review</dt><dd>status is 3.</dd><dt>Future</dt><dd>status is 4.</dd><dt>Spam</dt><dd>status is 5.</dd></dl>
    + maxComments (optional, number) ... This is an optional parameter. Maximum number of comments to retrieve as part of the Pages resource. If this parameter is not supplied, no comments will be returned.
    + maxTrackbacks (optional, number) ... This is an optional parameter. Maximum number of received trackbacks to retrieve as part of the Pages resource. If this parameter is not supplied, no trackbacks will be returned.
    + no_text_filter = `0` (optional, number) ... If you want to fetch the raw text, set to '1'. New in v2

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
            {
              "excerpt" : "We are excited to announce that Six Apar...",
              "status" : "Publish",
              "date" : "2014-11-14T13:08:42¥u002b09:00",
              "updatable" : false,
              "author" : {
                "userpicUrl" : null,
                "displayName" : "Yuji Takayama"
              },
              "allowComments" : true,
              "comments" : [],
              "permalink" : "http://localhost/news/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
              "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
              "keywords" : "",
              "allowTrackbacks" : false,
              "id" : 5,
              "trackbacks" : [],
              "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
              "trackbackCount" : "0",
              "folder" : {
                "id" : 2,
                "parent" : 1,
                "label" : "news"
              },
              "blog" : {
                "id" : "1"
              },
              "commentCount" : "0",
              "tags" : [],
              "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
              "assets" : [],
              "pingsSentUrl" : [],
              "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
              "class" : "entry",
              "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
              "more" : "",
              "customFields" : [
                {
                  "basename" : "place",
                  "value" : "New York City"
                },
                {
                  "basename" : "agenda",
                  "value" : "Movable Type¥nTopics"
                }
              ]
            }
          ]
        }

## listPagesForAsset [/sites/{site_id}/assets/{asset_id}/pages(?search, searchFields, limit, offset, sortBy, sortOrder, fields, includeIds, excludeIds, status, maxComments, maxTrackbacks, no_text_filter)]

### New in v2.0: Retrieve a list of pages that related with specific asset. [GET]

+ Authorization is required if want to include unpublished pages.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of pages.
404 | Not Found | Site or Asset not found.

**Permissions**

+ manage_pages
    + for retrieve unpublished page

+ Parameters
    + site_id (required, number) ... The site ID.
    + asset_id (required, number) ... The asset ID.
    + search (optional, string) ... Search query.
    + searchFields = `title,body,more,keywords,excerpt,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of pages to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `authored_on` (optional, string) ... The field name for sort. You can specify one of following values<ul><li>authored_on</li><li>title</li><li>created_on</li><li>modified_on</li></ul>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return pages in descending order.</dd><dt>ascend</dt><dd>Return pages in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Pages resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of pages to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of pages to exclude from result.
    + status (optional, string) ... Filter by container entry's status. <dl><dt>Draft</dt><dd>entry_status is 1.</dd><dt>Publish</dt><dd>entry_status is 2.</dd><dt>Review</dt><dd>entry_status is 3.</dd><dt>Future</dt><dd>entry_status is 4.</dd><dt>Spam</dt><dd>entry_status is 5.</dd></dl>
    + maxComments (optional, number) ... This is an optional parameter. Maximum number of pages to retrieve as part of the Pages resource. If this parameter is not supplied, no pages will be returned.
    + maxTrackbacks (optional, number) ... This is an optional parameter. Maximum number of received trackbacks to retrieve as part of the Pages resource. If this parameter is not supplied, no trackbacks will be returned.
    + no_text_filter = `0` (optional, number) ... If you want to fetch the raw text, set to '1'. New in v2

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
            {
              "excerpt" : "We are excited to announce that Six Apar...",
              "status" : "Publish",
              "date" : "2014-11-14T13:08:42¥u002b09:00",
              "updatable" : false,
              "author" : {
                "userpicUrl" : null,
                "displayName" : "Yuji Takayama"
              },
              "allowComments" : true,
              "comments" : [],
              "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
              "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
              "keywords" : "",
              "allowTrackbacks" : false,
              "id" : 5,
              "trackbacks" : [],
              "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
              "trackbackCount" : "0",
              "folder" : {
                "id" : 2,
                "parent" : 1,
                "label" : "news"
              },
              "blog" : {
                "id" : "1"
              },
              "commentCount" : "0",
              "tags" : [],
              "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
              "assets" : [],
              "pingsSentUrl" : [],
              "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
              "class" : "entry",
              "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
              "more" : "",
              "customFields" : [
                {
                  "basename" : "place",
                  "value" : "New York City"
                },
                {
                  "basename" : "agenda",
                  "value" : "Movable Type¥nTopics"
                }
              ]
            }
          ]
        }

## listPagesForSiteAndTag [/sites/{site_id}/tags/{tag_id}/pages(?search, searchFields, limit, offset, sortBy, sortOrder, fields, includeIds, excludeIds, status, status, maxComments, maxTrackbacks, no_text_filter)]

### New in v2.0: Retrieve a list of pages that related with specific tag. [GET]

+ Authorization is required if want to include unpublished pages.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of pages.
404 | Not Found | Site or Tag not found.

**Permissions**

+ manage_pages
    + for retrieve unpublished page

+ Parameters
    + site_id (required, number) ... The site ID.
    + tag_id (required, number) ... The tag ID.
    + search (optional, string) ... Search query.
    + searchFields = `title,body,more,keywords,excerpt,basename` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of pages to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `modified_on` (optional, string) ... The field name for sort. You can specify one of following values<ul><li>authored_on</li><li>title</li><li>created_on</li><li>modified_on</li></ul>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return pages in descending order.</dd><dt>ascend</dt><dd>Return pages in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Pages resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of pages to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of pages to exclude from result.
    + status (optional, string) ... Filter by container entry's status. <dl><dt>Draft</dt><dd>entry_status is 1.</dd><dt>Publish</dt><dd>entry_status is 2.</dd><dt>Review</dt><dd>entry_status is 3.</dd><dt>Future</dt><dd>entry_status is 4.</dd><dt>Spam</dt><dd>entry_status is 5.</dd></dl>
    + maxComments (optional, number) ... This is an optional parameter. Maximum number of pages to retrieve as part of the Pages resource. If this parameter is not supplied, no pages will be returned.
    + maxTrackbacks (optional, number) ... This is an optional parameter. Maximum number of received trackbacks to retrieve as part of the Pages resource. If this parameter is not supplied, no trackbacks will be returned.
    + no_text_filter = `0` (optional, number) ... If you want to fetch the raw text, set to '1'.

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
            {
              "excerpt" : "We are excited to announce that Six Apar...",
              "status" : "Publish",
              "date" : "2014-11-14T13:08:42¥u002b09:00",
              "updatable" : false,
              "author" : {
                "userpicUrl" : null,
                "displayName" : "Yuji Takayama"
              },
              "allowComments" : true,
              "comments" : [],
              "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
              "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
              "keywords" : "",
              "allowTrackbacks" : false,
              "id" : 5,
              "trackbacks" : [],
              "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
              "trackbackCount" : "0",
              "folder" : {
                "id" : 2,
                "parent" : 1,
                "label" : "news"
              },
              "blog" : {
                "id" : "1"
              },
              "commentCount" : "0",
              "tags" : [],
              "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
              "assets" : [],
              "pingsSentUrl" : [],
              "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
              "class" : "entry",
              "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
              "more" : "",
              "customFields" : [
                {
                  "basename" : "place",
                  "value" : "New York City"
                },
                {
                  "basename" : "agenda",
                  "value" : "Movable Type¥nTopics"
                }
              ]
            }
          ]
        }

## createPage [/sites/{site_id}/pages]

### Create a new page. [POST]

+ Authorization is required.

**Update in v2.0**

 + You can attach folder and assets in the one request.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to create a new page.
404 | Not Found | Site not found.

**Permissions**

+ manage_post

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
page | Object | Yes | | Single Pages resource

+ Parameters
    + site_id (required, number) ... The site ID.

+ Request Pages resource

    + Headers

            Content-Type: application/x-www-form-urlencoded

    + Body

            page={"excerpt" : "We are excited to announce that Six Apar...","status" : "Publish","allowComments" : true,"body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e","keywords" : "","allowTrackbacks" : false,"basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades","title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades","more" : "","customFields" : [{"basename" : "place","value" : "New York City"},{"basename" : "agenda","value" : "Movable Type¥nTopics"}]}

+ Response 200 (application/json)

        {
          "excerpt" : "We are excited to announce that Six Apar...",
          "status" : "Publish",
          "date" : "2014-11-14T13:08:42¥u002b09:00",
          "updatable" : false,
          "author" : {
            "userpicUrl" : null,
            "displayName" : "Yuji Takayama"
          },
          "allowComments" : true,
          "comments" : [],
          "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
          "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
          "keywords" : "",
          "allowTrackbacks" : false,
          "id" : 5,
          "trackbacks" : [],
          "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
          "trackbackCount" : "0",
          "folder" : {
            "id" : 2,
            "parent" : 1,
            "label" : "news"
          },
          "blog" : {
            "id" : "1"
          },
          "commentCount" : "0",
          "tags" : [],
          "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
          "assets" : [],
          "pingsSentUrl" : [],
          "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
          "class" : "entry",
          "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
          "more" : "",
          "customFields" : [
            {
              "basename" : "place",
              "value" : "New York City"
            },
            {
              "basename" : "agenda",
              "value" : "Movable Type¥nTopics"
            }
          ]
        }

## getPage [/sites/{site_id}/pages/{page_id}(?fields)]

### Retrieve a single page by its ID. [GET]

+ Authorization is required if the page status is "unpublished". If the page status is "published", then this method can be called without authorization.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the requested page.
404 | Not Found | Site or Page not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + page_id (required, number) ... The page ID.
    + fields (optional, string) ... The field list to retrieve as part of the Pages resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "excerpt" : "We are excited to announce that Six Apar...",
          "status" : "Publish",
          "date" : "2014-11-14T13:08:42¥u002b09:00",
          "updatable" : false,
          "author" : {
            "userpicUrl" : null,
            "displayName" : "Yuji Takayama"
          },
          "allowComments" : true,
          "comments" : [],
          "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
          "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
          "keywords" : "",
          "allowTrackbacks" : false,
          "id" : 5,
          "trackbacks" : [],
          "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
          "trackbackCount" : "0",
          "folder" : {
            "id" : 2,
            "parent" : 1,
            "label" : "news"
          },
          "blog" : {
            "id" : "1"
          },
          "commentCount" : "0",
          "tags" : [],
          "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
          "assets" : [],
          "pingsSentUrl" : [],
          "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
          "class" : "entry",
          "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
          "more" : "",
          "customFields" : [
            {
              "basename" : "place",
              "value" : "New York City"
            },
            {
              "basename" : "agenda",
              "value" : "Movable Type¥nTopics"
            }
          ]
        }


## updatePage and deletePage [/sites/{site_id}/pages/{page_id}]

### Update an existing page. [PUT]

+ Authorization is required.
+ This method accepts PUT and POST with __method=PUT.

** Update in v2.0 **

 + You can attach/detach folder and assets in the one request.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to update the speciied age.
404 | Not Found | Site or Pagenot found.

**Permissions**

+ manage_pages

+ Parameters
    + site_id (required, number) ... The site ID.
    + page_id (required, number) ... The page ID.

+ Request Entries resource

    + Headers

            Content-Type: application/x-www-form-urlencoded

    + Body

            page={"excerpt" : "We are excited to announce that Six Apar...","status" : "Publish","allowComments" : true,"body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e","keywords" : "","allowTrackbacks" : false,"basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades","title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades","more" : "","customFields" : [{"basename" : "place","value" : "New York City"},{"basename" : "agenda","value" : "Movable Type¥nTopics"}]}

+ Response 200 (application/json)

        {
          "excerpt" : "We are excited to announce that Six Apar...",
          "status" : "Publish",
          "date" : "2014-11-14T13:08:42¥u002b09:00",
          "updatable" : false,
          "author" : {
            "userpicUrl" : null,
            "displayName" : "Yuji Takayama"
          },
          "allowComments" : true,
          "comments" : [],
          "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
          "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
          "keywords" : "",
          "allowTrackbacks" : false,
          "id" : 5,
          "trackbacks" : [],
          "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
          "trackbackCount" : "0",
          "folder" : {
            "id" : 2,
            "parent" : 1,
            "label" : "news"
          },
          "blog" : {
            "id" : "1"
          },
          "commentCount" : "0",
          "tags" : [],
          "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
          "assets" : [],
          "pingsSentUrl" : [],
          "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
          "class" : "entry",
          "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
          "more" : "",
          "customFields" : [
            {
              "basename" : "place",
              "value" : "New York City"
            },
            {
              "basename" : "agenda",
              "value" : "Movable Type¥nTopics"
            }
          ]
        }

### Delete an existing page. [DELETE]

+ Authorization is required.
This method accepts PUT and POST with __method=DELETE.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to delete the speciied page.
404 | Not Found | Site or Page not found.

**Permissions**

+ edit_entry

+ Parameters
    + site_id (required, number) ... The site ID.
    + page_id (required, number) ... The page ID.

+ Response 200 (application/json)

        {
          "excerpt" : "We are excited to announce that Six Apar...",
          "status" : "Publish",
          "date" : "2014-11-14T13:08:42¥u002b09:00",
          "updatable" : false,
          "author" : {
            "userpicUrl" : null,
            "displayName" : "Yuji Takayama"
          },
          "allowComments" : true,
          "comments" : [],
          "permalink" : "http://localhost/blog/20141114-1/2014/11/six-apart-acquires-topics-server-to-simplify-site-upgrades.html",
          "body" : "¥u003cp¥u003e¥u003cspan¥u003eWe are excited to announce that Six Apart has acquired Topics, a dynamic online publishing product. This offering will provide Six Apart customers with an easy and cost-effective way to adapt existing content to evolving digital platforms.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eThis new product will save Six Apart customers a significant amount of time and money by allowing users to upgrade their websites and applications without migrating from their current content management systems. Clients who need to scale large amounts of data or even revamp a website on an entirely new platform can now achieve these changes with minimal effort.¥u003c/span¥u003e¥u003c/p¥u003e¥n¥u003cp¥u003e¥u003cspan¥u003eSix Apart customers will benefit not only from saved time and money, but also from ease of use. Topics does not have a user interface, so there is no new software to learn. Instead, it exists as a middle layer between the data library and the published page - automatically gathering, organizing and redistributing data.¥u003c/span¥u003e¥u003c/p¥u003e",
          "keywords" : "",
          "allowTrackbacks" : false,
          "id" : 5,
          "trackbacks" : [],
          "modifiedDate" : "2014-11-14T13:17:52¥u002b09:00",
          "trackbackCount" : "0",
          "folder" : {
            "id" : 2,
            "parent" : 1,
            "label" : "news"
          },
          "blog" : {
            "id" : "1"
          },
          "commentCount" : "0",
          "tags" : [],
          "basename" : "six_apart_acquires_topics_server_to_simplify_site_upgrades",
          "assets" : [],
          "pingsSentUrl" : [],
          "title" : "Six Apart Acquires Topics Server to Simplify Site Upgrades",
          "class" : "entry",
          "createdDate" : "2014-11-14T13:17:52¥u002b09:00",
          "more" : "",
          "customFields" : [
            {
              "basename" : "place",
              "value" : "New York City"
            },
            {
              "basename" : "agenda",
              "value" : "Movable Type¥nTopics"
            }
          ]
        }

# Group Sites

This is the Sites resource.

Property Name | Type | Data Type | Database Column | Private | Read Only | Description | Version
------------ | ------------- | ------------ | ------------ | ------------- | ------------ | ------------ | ------------
allowCommenterRegist | value | boolean | mt_blog.blog_allow_commenter_regist | Y | |<dl><dt>true</dt><dd>Allow visitors to register as members of this website using one of the Authentication Methods selected below.</dd><dt>false</dt><dd>Not allowed.<dd></dl> | v2
allowCommentHtml | value | boolean | mt_blog.blog_allow_comment_html | Y | | <dl><dt>true</dt><dd>Allow commenters to include a limited set of HTML tags in their comments.</dd><dt>false</dt><dd>All HTML will be stripped out.</dd></dl> | v2
allowComments | value | boolean | mt_blog.blog_allow_reg_comments<br>mt_blog.blog_allow_unreg_comments | Y | | <dl><dt>true</dt><dd>Accept comments.</dd><dt>false</dt><dd>Do not accept comments.</dd></dl> | v2
allowCommentsDefault | value | boolean | mt_blog.blog_allow_comments_default | Y | | The state of the comment acceptance of default in this site. <dl><dt>true</dt><dd>Comments are accepted.</dd><dt>false</dt><dd>Comments are not accepted.</dd></dl> | v2
allowPings | value | boolean | mt_blog.blog_allow_pings | Y | - | <dl><dt>true</dt><dd>Accept TrackBacks from any source.</dd><dt>false</dt><dd>Do not accept.</dd></dl> | v2
allowPingsDefault | value | boolean | mt_blog.blog_allow_pings_default | Y | | The state of the comment acceptance of default in this site. Available value is follows. <dl><dt>true</dt><dd>Trackbacks are accepted.</dd><dt>false</dt><dd>Trackbacks are not accepted.</dd></dl> | v2
allowUnregComments | value | boolean | mt_blog.blog_allow_unreg_comments | Y | | <dl><dt>true</dt><dd>Allow comments from anonymous or unauthenticated users.</dd><dt>false</dt><dd>Not allowed.</dd></dl> | v2
archivePath | value | string | mt_blog.blog_archive_path | Y | | The archive path for this site. This property only accepts absolute path. | v2
archiveTypePreferred | value | string | mt_blog.blog_archive_type_preferred | Y | | The preferred archive type for this site. | v2
archiveUrl | value | string | mt_blog.blog_archive_url | | | The archive url of this site. [Update in v2] This property was changed to updatable. | v1
autodiscoverLinks | value | boolean | mt_blog.blog_autodiscovery_links | Y | | <dl><dt>true</dt><dd>Enable External TrackBack Auto-Discovery.</dd><dt>false</dt><dd>Disable.</dd></dl> | v2
autolinkUrls | value | boolean | mt_blog.blog_autolink_urls | Y | | <dl><dt>true</dt><dd>Transform URLs in comment text into HTML links</dd><dt>false</dt><dd>Do not transform.</dd></dl> | v2
basenameLimit | value | number | mt_blog.blog_basename_limit | Y | | The maximum length of basename. | v2
ccLicenseImage | value | string | mt_blog.blog_cc_license | - | Y | The URL for the Creative Commons License image for this site. | v2
ccLicenseUrl | value | string | mt_blog.blog_cc_license | - | Y | The URL for the Creative Commons License url for this site. | v2
class | value | string | mt_blog.blog_class | Y | | The object class for this site. | v1
commenterAuthenticators | ARRAY | string | mt_blog_meta.commenter_authenticators | Y | | Array of commenter authenticators for this site. | v2
convertParasComments | value | string | mt_blog.blog_convert_paras_comments | Y | | The text formatting of this site's comment. | v2
contentCss | value | string | mt_blog.blog_content_css | Y | | The CSS applying to WYSIWYG editor of this site. | v2
convertParas | value | string | mt_blog.blog_convert_paras | Y | | The default text formatting in this site. Available value in default is follows.<dl><dt>0</dt><dd>The default text formatting is 'None'</dd><dt>__default__</dt><dd>The default text formatting is 'Convert Line Breaks'</dd><dt>markdown</dt><dd>The default text formatting is 'Markdown'</dd><dt>markdown_with_smartypants</dt><dd>The default text formatting is 'Markdown With SmartyPants'</dd><dt>richtext</dt><dd>The default text formatting is 'Rich Text'</dd><dt>textile_2</dt><dd>The default text formatting is 'Textile 2'</dd></dl> | v2
createdBy | Object | - | | | Y | The created user of this website. | v2
createdBy.id | value | number | mt_blog.blog_created_by | Y | Y | The ID of created user. | v2
createdBy.displayName | value | string | | | Y | The display name of created user. | v2
createdBy.userpicUrl | value | string | | | Y | The URL of created user's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
createdDate | value | iso 8601 datetime | mt_blog.blog_created_on | | Y | The created time for this website. | v2
customDynamicTemplates | value | string | mt_blog.blog_custom_dynamic_templates | Y | | Publishing profile for this site. Available value is follows. <dl><dt>none</dt><dd>Immediately publish all index templates and archive templates statically.</dd><dt>all</dt><dd>Publish all index templates and archive templates dynamically.</dd><dt>archives</dt><dd>Publish all archive templates dynamically. Immediately publish all index templates statically.</dd><dt>async_all</dt><dd>All index templates and archive templates published statically via Publish Que.</dd><dt>async_partial</dt><dd>mmediately publish Main Index template, Page archives statically. Use Publish Queue to publish all other index templates and archive templates statically.</dd></dl> | v2
daysOrPosts | value | string | mt_blog.blog_days_on_index<br/>mt_blog.blog_entries_on_index | Y | | The type of listing default. Available value is follows. <dl><dt>days</dt><dd>Listing entries that written in the past N days. N is a value of listOnIndex.</dd><dt>posts</dt><dd>Listing most recent N entries. N is a value of listOnIndex.</dd></dl> | v2
dateLanguage | value | string | mt_blog.blog_date_language | - | - | The date locale settings for this site. Available valus is follow. <dl><dt>cz</dt><dd>Czech</dd><dt>dk</dt><dd>Danish</dd><dt>nl</dt><dd>Dutch</dd><dt>en</dt><dd>English</dd><dt>et</dt><dd>Estonian</dd><dt>fr</dt><dd>French</dd><dt>de</dt><dd>German</dd><dt>is</dt><dd>Icelandic</dd><dt>it</dt><dd>Italian</dd><dt>ja</dt><dd>Japanese</dd><dt>no</dt><dd>Norwegian</dd><dt>pl</dt><dd>Polish</dd><dt>pt</dt><dd>Portuguese</dd><dt>sk</dt><dd>Slovak</dd><dt>si</dt><dd>Slovenian</dd><dt>es</dt><dd>Spanish</dd><dt>fi</dt><dd>Suomi</dd><dt>se</dt><dd>Swedish</dd></dl> | v2
description | value | string | mt_blog.blog_description | | | The description of this site. [Update in v2] This property was changed to updatable. | v1
dynamicCache | value | boolean | | Y | |Cannot set this property when dynamic templates does not exist. <dl><dt>true</dt><dd>Dynamic cache for dynamic publishing is enabled.</dd><dt>false</dt><dd>Dynamic cache for dynamic publishing is disabled.</dd></dl> | v2
dynamicConditional | value | boolean | | Y | | Cannot set this property when dynamic templates does not exist. <dl><dt>true</dt><dd>Dynamic conditional retrieval of dynamic publishing is enabled. </dd><dt>false</dt><dd>Dynamic conditional retrieval of dynamic publishing is disabled.</dd></dl> | v2
entryCustomPrefs | ARRAY | string | | Y | Y | Default displayed fields of this site's entry. Available value is follows.<dl><dt>title</dt><dd>Title field</dd><dt>text</dt><dd>Body and extended field</dd><dt>category</dt><dd>Category list</dd><dt>excerpt</dt><dd>Excerpt field</dd><dt>keywords</dt><dd>Keyword field</dd><dt>tags</dt><dd>Tags field</dd><dt>feedback</dt><dd>Comment and trackback setting field</dd><dt>assets</dt><dd>Entry assets list</dd><dt>customfield_&lt;basename&gt;</dt><dd>Each custom Fields</dd></dl> | v2
emailNewComments | value | number | mt_blog.blog_email_new_comments | Y | | Email notification when posting comment to this site.<dl><dt>0</dt><dd>Off.</dd><dt>1</dt><dd>On.</dd><dt>2</dt><dd>Only when attension is required.</dd></dl> | v2
emailNewPings | value | number | mt_blog.blog_email_new_pings | Y | | "Email notification setting when accepting trackback to this site. <dl><dt>0</dt><dd>Off.</dd><dt>1</dt><dd>On.</dd><dt>2</dt><dd>Only when attention is required.</dd></dl> | v2
fileExtension | value | string | mt_blog.blog_file_extension | Y | | The file extension for this site. | v2
followAuthLinks | value | boolean | mt_blog_meta.follow_auth_links | Y | | <dl><dt>true</dt><dd>Do not add the 'nofollow' attribute when a comment is submitted by a trusted commenter.</dd><dt>false</dt><dd>Add the 'nofollow' attribute .</dd></dl> | v2
host | value | string | mt_blog.blog_site_url | - | Y | The host name of this site. | v2
id | value | number | mt_blog.blog_id | | Y | The ID of this site. | v1
includeCache | value | boolean | mt_blog_meta:include_cache | Y | | <dl><dt>true</dt><dd>Module cache is enabled.</dd><dt>false</dt><dd>Module cache is disabled.</dd></dl> | v2
includeSystem | value | string | mt_blog_meta:include_system | Y | | <dl><dt>'' (empty string)</dt><dd>Server Side Includes is disabled.</dd><dt>php</dt><dd>Server Side Include is enabled with PHP.</dd><dt>shtml</dt><dd>Server Side Include is enabled with Apache SSI.</dd><dt>asp</dt><dd>Server Side Include is enabled with ASP.</dd><dt>jsp</dt><dd>Server Side Include is enabled with JSP.</dd></dl> | v2
language | value | string | mt_blog.blog_language | | | The language for this site. Available value is follows. <dl><dt>de</dt><dd>German</dd><dt>en</dt><dd>English</dd><dt>es</dt><dd>Spanish</dd><dt>fl</dt><dd>French</dd><dt>nl</dt><dd>Dutch</dd><dt>ja</dt><dd>Japanese</dd></dl> | v2
internalAutodiscovery | value | boolean | mt_blog.blog_internal_autodiscovery | Y | - |  <dl><dt>true</dt><dd>Enable Internal TrackBack Auto-Discovery</dd><dt>false</dt><dd>Disable.</dd></dl> | v2
junkFolderExpiry | value | number | mt_blog.blog_junk_folder_expiry | Y | | The period for deleting spam comments and trackbacks. | v2
junkScoreThreshold | value | number | mt_blog.blog_junk_score_threshold | Y | | The spam score threshold of this site. | v2
listOnIndex | value | number | mt_blog.blog_days_on_index<br/>mt_blog.blog_entries_on_index | Y | | The number of entries shown in the list by default. | v2
maxRevisionsEntry | value | number | mt_blog_meta:max_revisions_entry | Y | | The number of revisions per entries and pages in this site. | v2
maxRevisionsTemplate | value | number | mt_blog_meta.max_revisions_template | Y | | The number of revisions per templates in this site. | v2
moderateComments | value | number | mt_blog.blog_moderate_unreg_comments | Y | | <dl><dt>0</dt><dd>Anyone.</dd><dt>1</dt><dd>No one.</dd><dt>2</dt><dd>Trusted commenters only.</dd><dt>3</dt><dd>Any authenticated commenters.</dd></dl> | v2
moderatePings | value | boolean | mt_blog.blog_moderate_pings | Y | | <dl><dt>true</dt><dd>Hold all TrackBacks for approval before they are published.</dd><dt>false</dt><dd>Do not hold.</dd></dl> | v2
modifiedBy | Object | - | | | Y | The last modified user of this website. | v2
modifiedBy.displayName | value | string | | | Y | The display name of last modified user. | v2
modifiedBy.id | value | number | mt_blog.blog_modified_by | Y | Y | The ID of last modified user. | v2
modifiedBy.userpicUrl | value | string | | | Y | The URL of last modified user's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
modifiedDate | value | iso 8601 datetime | mt_blog.blog_modified_on | | Y | The last modified time for this website. | v2
name | value | string | mt_blog.blog_name | | | The name for this site. [Update in v2] This property was changed to updatable. | v1
newCreatedUserRoles | ARRAY | Role | - | Y | | Assigned to users that are created in the future on this site. | v2
newCreatedUserRole.id | value | number | mt_role.role_id | Y | Y |  | v2
newCreatedUserRole.name | value | string | mt_role.role_name | Y | Y |  | v2
nofollowUrls | value | boolean | mt_blog_meta.nofollow_urls | Y | | <dl><dt>true</dt><dd>All URLs in comments and TrackBacks will be assigned a 'nofollow' link relation.</dd><dt>false</dt><dd>Not assigned.</dl> | v2
pageCustomPrefs | ARRAY | string | | Y | Y | Default displayed fields of this site's page. Available value is follows. <dl><dt>title</dt><dd>Title field</dd><dt>text</dt><dd>Body and extended field</dd><dt>category</dt><dd>Category list</dd><dt>excerpt</dt><dd>Excerpt field</dd><dt>keywords</dt></dd>Keyword field</dd><dt>tags</dt><dd>Tags field</dd><dt>feedback</dt><dd>Comment and trackback setting field</dd><dt>assets</dt><dd>Page assets list</dd><dt>customfield_&lt;basename&gt;</dt><dd>Each custom Fields</dd></dl>| v2
parent | Object | - | - | - | Y | The parent website of this blog. If this object is Websites Resource, this object must be null. | v2
parent.id | value | number | mt_blog.blog_parent_id (mt_blog.blog_id) | - | Y | The ID of parent website. | v2
parent.name | value | string | mt_blog.blog_name | - | Y | The name of parent website. | v2
publishEmptyArchive | value | boolean | mt_blog_meta:publish_empty_archive | | | <dl><dt>true</dt><dd>Category archive without entries is published.</dd><dt>false</dt><dd>Category archive without entries is not published.</dd></dl> | v2
pingGoogle | value | boolean | mt_blog.blog_ping_google | Y | | <dl><dt>true</dt><dd>Enable sending update ping to Google.</dd><dt>false</dt><dd>Disabled sending update ping to Google.</dd></dl> | v2
pingWeblogs | value | boolean | mt_blog.blog_ping_weblogs | Y | | <dl><dt>true</dt><dd>Enable sending update ping to weblogs.com.</dd><dt>false</dt><dd>Disabled sending update ping to weblogs.com.</dd></dl> | v2
pingOthers | value | string | mt_blog.blog_ping_others | Y | - | Array of update ping services. | v2
relativeUrl | value | string | mt_blog.blog_site_url | - | Y | The relative site url of this site. | v2
requireCommentEmails | value | boolean | mt_blog.blog_require_comment_emails | Y | | <dl><dt>true<dt><dd>Require name and E-mail Address for Anonymous Comments.</dd><dt>false</dt><dd>Do not require.</dd></dl> | v2
sanitizeSpec | value | string | mt_blog.blog_santize_spec | Y | | The limit html tags of this site's comment. "0" is default. | v2
serverOffset | value | number | mt_blog.blog_server_offset | | | The server offset for this site. | v2
sitePath | value | string | mt_blog.blog_site_path | Y | | The site path for this site. This property only accepts absolute path. | v2
siteSubdomain | value | string | mt_blog.blog_site_url | Y | (Write Only) | The subdomain for this site. This is write-only property. | v2
smartReplace | value | number | mt_blog.blog_nwc_smart_replace | Y | | The punctuation replacement of this site. <dl><dt>0</dt><dd>No substitution.</dd><dt>1</dt><dd>Character entities.</dd><dt>2</dt><dd>ASCII equivalents.</dd> | v2
sortOrderPosts | value | string | mt_blog.blog_sort_order_posts | Y | | The default sorting direction for the entry listing. Available value is follows. <dl><dt>ascend>/dt>Ascengin order.</dd><dt>descend</dt></dd>Descending order</dd></dl> | v2
sortOrderComments | value | string | mt_blog.blog_sort_order_comments | Y | | The comment order of this site. Available value is follows. <dl><dt>"ascend"</dt><dd>Ascending order</dd><dt>Descending order</dd></dl>| v2
smartReplaceFields | ARRAY | string | mt_blog.blog_nwc_replace_field | Y | | Replace fields of this site. | v2
statusDefault | value | string | mt_blog.blog_status_default | Y | | The default entry status in this site. Available value is follows. <dl><dt>Pubish</dt><dd>The default status is 'Published'</dd><dt>Draft</dt><dd>The default status is 'Unpublished'</dd></dl> | v2
themeId | value | string | mt_blog.blog_theme_id | Y | | The theme ID for this site. | v2
timezone | value | number | mt_blog.mt_server_offset | - | Y | The timezone of this site. | v2
updatable | value | boolean | | | Y | <dl><dt>true</dt><dd>Current user can update this website.</dd><dt>false</dt><dd>Current user cannot update this website.</dd> | v2
url | value | string | mt_blog.blog_site_url | | | The site url of this site.  [Update in v2] This property was changed to updatable. | v1
useCommentComfirmation | value | boolean | mt_blog.blog_use_comment_confirmation | Y | | <dl><dt>true</dt><dd>Each commenter's browser will be redirected to a comment confirmation page after their comment is accepted.</dd><dt>false</dt><dd>Will not.</dd></dl> | v2
useRevision | value | boolean | mt_blog.blog_use_revision | Y | | <dl><dt>true</dt><dd>Revision history is enabled.</dd><dt>false</dt><dd>Revision history is disabled.</dd></dl> | v2
wordsInExcerpt | value | number | mt_blog.blog_words_in_excerpt | Y | | The default length for excerpt. | v2

            {
              "serverOffset" : "9",
              "themeId" : "rainier",
              "statusDefault" : "Publish",
              "autodiscoverLinks" : false,
              "useRevision" : true,
              "relativeUrl" : "/",
              "entryCustomPrefs" : [
                "title",
                "text",
                "category",
                "excerpt",
                "keywords",
                "tags",
                "feedback",
                "assets",
                "customfield_license_fee",
                "customfield_foo"
              ],
              "archivePath" : "/path/to/document_root/",
              "useCommentConfirmation" : true,
              "url" : "http://example.com/",
              "smartReplaceFields" : [
                "title",
                "text",
                "text_more",
                "keywords",
                "excerpt",
                "tags"
              ],
              "modifiedBy" : {
                "userpicUrl" : null,
                "id" : "1",
                "displayName" : "Yuji Takayama"
              },
              "timezone" : "+09:00",
              "daysOrPosts" : "posts",
              "sortOrderPosts" : "descend",
              "name" : "Six Apart Shop",
              "convertParas" : "richtext",
              "description" : "",
              "includeSystem" : "",
              "archiveUrl" : "http://example.com",
              "allowCommentHtml" : true,
              "fileExtension" : "html",
              "smartReplace" : "0",
              "junkFolderExpiry" : "14",
              "publishEmptyArchive" : false,
              "dateLanguage" : "ja",
              "listOnIndex" : "10",
              "pingWeblogs" : true,
              "emailNewComments" : "1",
              "language" : "ja",
              "autolinkUrls" : true,
              "sanitizeSpec" : "0",
              "customFields" : [],
              "emailNewPings" : "1",
              "nofollowUrls" : true,
              "createdBy" : {
                "userpicUrl" : null,
                "id" : "1",
                "displayName" : "Yuji Takayama"
              },
              "pingGoogle" : true,
              "convertParasComments" : "1",
              "sitePath" : "/path/to/document_root/",
              "id" : "1",
              "parent" : null,
              "archiveTypePreferred" : "Individual",
              "contentCss" : "{{theme_static}}css/editor.css",
              "junkScoreThreshold" : "0",
              "internalAutodiscovery" : false,
              "createdDate" : "2014-12-28T23:09:45+09:00",
              "class" : "website",
              "moderateComments" : "2",
              "allowCommentsDefault" : true,
              "includeCache" : false,
              "allowCommenterRegist" : true,
              "maxRevisionsEntry" : "20",
              "updatable" : true,
              "requireCommentEmails" : false,
              "ccLicenseImage" : "https://i.creativecommons.org/l/by/4.0/88x31.png",
              "allowComments" : true,
              "allowPingsDefault" : false,
              "pingOthers" : [],
              "dynamicCache" : false,
              "basenameLimit" : "100",
              "modifiedDate" : "2015-03-12T12:16:24+09:00",
              "dynamicConditional" : false,
              "pageCustomPrefs" : [
                "title",
                "text",
                "excerpt",
                "keywords",
                "tags",
                "feedback",
                "assets"
              ],
              "allowPings" : false,
              "commenterAuthenticators" : [
                "MovableType"
              ],
              "host" : "localhost",
              "ccLicenseUrl" : "http://creativecommons.org/licenses/by/4.0/",
              "newCreatedUserRoles" : [],
              "wordsInExcerpt" : "40",
              "sortOrderComments" : "ascend",
              "followAuthLinks" : true,
              "allowUnregComments" : false,
              "maxRevisionsTemplate" : "20",
              "moderatePings" : true,
              "customDynamicTemplates" : "none"
            }

## listByUser [/users/:user_id/sites(?limit, offset, sortBy, sortOrder, fields, searchFields, search, includeIds, excludeIds)]

+ Authorization is required.

### Retrieve a list of sites by user [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of sites.
404 | Not Found | User not found.

+ Parameters
    + user_id (required, number or 'me') ... The user ID or the word 'me'.
    + search (optional, string) ... Search query.
    + searchFields = `name` (optional, string) ... Only 'name' is available.
    + limit = `25` (optional, number) ... Maximum number of sites to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `name` (optional, string) ... Only 'name' is available
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return sites in descending order.</dd><dt>ascend</dt><dd>Return sites in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Sites resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of sites to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of sites to exclude from result.

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
            {
              "serverOffset" : "9",
              "themeId" : "rainier",
              "statusDefault" : "Publish",
              "autodiscoverLinks" : false,
              "useRevision" : true,
              "relativeUrl" : "/",
              "entryCustomPrefs" : [
                "title",
                "text",
                "category",
                "excerpt",
                "keywords",
                "tags",
                "feedback",
                "assets",
                "customfield_license_fee",
                "customfield_foo"
              ],
              "archivePath" : "/path/to/document_root/",
              "useCommentConfirmation" : true,
              "url" : "http://example.com/",
              "smartReplaceFields" : [
                "title",
                "text",
                "text_more",
                "keywords",
                "excerpt",
                "tags"
              ],
              "modifiedBy" : {
                "userpicUrl" : null,
                "id" : "1",
                "displayName" : "Yuji Takayama"
              },
              "timezone" : "+09:00",
              "daysOrPosts" : "posts",
              "sortOrderPosts" : "descend",
              "name" : "Six Apart Shop",
              "convertParas" : "richtext",
              "description" : "",
              "includeSystem" : "",
              "archiveUrl" : "http://example.com",
              "allowCommentHtml" : true,
              "fileExtension" : "html",
              "smartReplace" : "0",
              "junkFolderExpiry" : "14",
              "publishEmptyArchive" : false,
              "dateLanguage" : "ja",
              "listOnIndex" : "10",
              "pingWeblogs" : true,
              "emailNewComments" : "1",
              "language" : "ja",
              "autolinkUrls" : true,
              "sanitizeSpec" : "0",
              "customFields" : [],
              "emailNewPings" : "1",
              "nofollowUrls" : true,
              "createdBy" : {
                "userpicUrl" : null,
                "id" : "1",
                "displayName" : "Yuji Takayama"
              },
              "pingGoogle" : true,
              "convertParasComments" : "1",
              "sitePath" : "/path/to/document_root/",
              "id" : "1",
              "parent" : null,
              "archiveTypePreferred" : "Individual",
              "contentCss" : "{{theme_static}}css/editor.css",
              "junkScoreThreshold" : "0",
              "internalAutodiscovery" : false,
              "createdDate" : "2014-12-28T23:09:45+09:00",
              "class" : "website",
              "moderateComments" : "2",
              "allowCommentsDefault" : true,
              "includeCache" : false,
              "allowCommenterRegist" : true,
              "maxRevisionsEntry" : "20",
              "updatable" : true,
              "requireCommentEmails" : false,
              "ccLicenseImage" : "https://i.creativecommons.org/l/by/4.0/88x31.png",
              "allowComments" : true,
              "allowPingsDefault" : false,
              "pingOthers" : [],
              "dynamicCache" : false,
              "basenameLimit" : "100",
              "modifiedDate" : "2015-03-12T12:16:24+09:00",
              "dynamicConditional" : false,
              "pageCustomPrefs" : [
                "title",
                "text",
                "excerpt",
                "keywords",
                "tags",
                "feedback",
                "assets"
              ],
              "allowPings" : false,
              "commenterAuthenticators" : [
                "MovableType"
              ],
              "host" : "localhost",
              "ccLicenseUrl" : "http://creativecommons.org/licenses/by/4.0/",
              "newCreatedUserRoles" : [],
              "wordsInExcerpt" : "40",
              "sortOrderComments" : "ascend",
              "followAuthLinks" : true,
              "allowUnregComments" : false,
              "maxRevisionsTemplate" : "20",
              "moderatePings" : true,
              "customDynamicTemplates" : "none"
            }
          ]
        }


## listSites [/sites(?limit, offset, sortBy, sortOrder, fields, searchFields, search, includeIds, excludeIds)]

### New in v2.0: Retrieve sites [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of sites.

+ Parameters
    + search (optional, string) ... Search query.
    + searchFields = `name` (optional, string) ... Only 'name' is available.
    + limit = `25` (optional, number) ... Maximum number of sites to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `name` (optional, string) ... Only 'name' is available
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return sites in descending order.</dd><dt>ascend</dt><dd>Return sites in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Sites resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of sites to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of sites to exclude from result.

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
            {
              "serverOffset" : "9",
              "themeId" : "rainier",
              "statusDefault" : "Publish",
              "autodiscoverLinks" : false,
              "useRevision" : true,
              "relativeUrl" : "/",
              "entryCustomPrefs" : [
                "title",
                "text",
                "category",
                "excerpt",
                "keywords",
                "tags",
                "feedback",
                "assets",
                "customfield_license_fee",
                "customfield_foo"
              ],
              "archivePath" : "/path/to/document_root/",
              "useCommentConfirmation" : true,
              "url" : "http://example.com/",
              "smartReplaceFields" : [
                "title",
                "text",
                "text_more",
                "keywords",
                "excerpt",
                "tags"
              ],
              "modifiedBy" : {
                "userpicUrl" : null,
                "id" : "1",
                "displayName" : "Yuji Takayama"
              },
              "timezone" : "+09:00",
              "daysOrPosts" : "posts",
              "sortOrderPosts" : "descend",
              "name" : "Six Apart Shop",
              "convertParas" : "richtext",
              "description" : "",
              "includeSystem" : "",
              "archiveUrl" : "http://example.com",
              "allowCommentHtml" : true,
              "fileExtension" : "html",
              "smartReplace" : "0",
              "junkFolderExpiry" : "14",
              "publishEmptyArchive" : false,
              "dateLanguage" : "ja",
              "listOnIndex" : "10",
              "pingWeblogs" : true,
              "emailNewComments" : "1",
              "language" : "ja",
              "autolinkUrls" : true,
              "sanitizeSpec" : "0",
              "customFields" : [],
              "emailNewPings" : "1",
              "nofollowUrls" : true,
              "createdBy" : {
                "userpicUrl" : null,
                "id" : "1",
                "displayName" : "Yuji Takayama"
              },
              "pingGoogle" : true,
              "convertParasComments" : "1",
              "sitePath" : "/path/to/document_root/",
              "id" : "1",
              "parent" : null,
              "archiveTypePreferred" : "Individual",
              "contentCss" : "{{theme_static}}css/editor.css",
              "junkScoreThreshold" : "0",
              "internalAutodiscovery" : false,
              "createdDate" : "2014-12-28T23:09:45+09:00",
              "class" : "website",
              "moderateComments" : "2",
              "allowCommentsDefault" : true,
              "includeCache" : false,
              "allowCommenterRegist" : true,
              "maxRevisionsEntry" : "20",
              "updatable" : true,
              "requireCommentEmails" : false,
              "ccLicenseImage" : "https://i.creativecommons.org/l/by/4.0/88x31.png",
              "allowComments" : true,
              "allowPingsDefault" : false,
              "pingOthers" : [],
              "dynamicCache" : false,
              "basenameLimit" : "100",
              "modifiedDate" : "2015-03-12T12:16:24+09:00",
              "dynamicConditional" : false,
              "pageCustomPrefs" : [
                "title",
                "text",
                "excerpt",
                "keywords",
                "tags",
                "feedback",
                "assets"
              ],
              "allowPings" : false,
              "commenterAuthenticators" : [
                "MovableType"
              ],
              "host" : "localhost",
              "ccLicenseUrl" : "http://creativecommons.org/licenses/by/4.0/",
              "newCreatedUserRoles" : [],
              "wordsInExcerpt" : "40",
              "sortOrderComments" : "ascend",
              "followAuthLinks" : true,
              "allowUnregComments" : false,
              "maxRevisionsTemplate" : "20",
              "moderatePings" : true,
              "customDynamicTemplates" : "none"
            }
          ]
        }

## listSitesByParent [/sites/:site_id/children(?limit, offset, sortBy, sortOrder, fields, searchFields, search, includeIds, excludeIds,)]

### New in v2.0: Retrieve sites by parent ID [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of sites.
404 | Not Found | Site not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + search (optional, string) ... Search query.
    + searchFields = `name` (optional, string) ... Only 'name' is available.
    + limit = `25` (optional, number) ... Maximum number of sites to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `name` (optional, string) ... Only 'name' is available
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return sites in descending order.</dd><dt>ascend</dt><dd>Return sites in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Sites resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of sites to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of sites to exclude from result.

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
            {
              "serverOffset" : "9",
              "themeId" : "rainier",
              "statusDefault" : "Publish",
              "autodiscoverLinks" : false,
              "useRevision" : true,
              "relativeUrl" : "/",
              "entryCustomPrefs" : [
                "title",
                "text",
                "category",
                "excerpt",
                "keywords",
                "tags",
                "feedback",
                "assets",
                "customfield_license_fee",
                "customfield_foo"
              ],
              "archivePath" : "/path/to/document_root/",
              "useCommentConfirmation" : true,
              "url" : "http://example.com/",
              "smartReplaceFields" : [
                "title",
                "text",
                "text_more",
                "keywords",
                "excerpt",
                "tags"
              ],
              "modifiedBy" : {
                "userpicUrl" : null,
                "id" : "1",
                "displayName" : "Yuji Takayama"
              },
              "timezone" : "+09:00",
              "daysOrPosts" : "posts",
              "sortOrderPosts" : "descend",
              "name" : "Six Apart Shop",
              "convertParas" : "richtext",
              "description" : "",
              "includeSystem" : "",
              "archiveUrl" : "http://example.com",
              "allowCommentHtml" : true,
              "fileExtension" : "html",
              "smartReplace" : "0",
              "junkFolderExpiry" : "14",
              "publishEmptyArchive" : false,
              "dateLanguage" : "ja",
              "listOnIndex" : "10",
              "pingWeblogs" : true,
              "emailNewComments" : "1",
              "language" : "ja",
              "autolinkUrls" : true,
              "sanitizeSpec" : "0",
              "customFields" : [],
              "emailNewPings" : "1",
              "nofollowUrls" : true,
              "createdBy" : {
                "userpicUrl" : null,
                "id" : "1",
                "displayName" : "Yuji Takayama"
              },
              "pingGoogle" : true,
              "convertParasComments" : "1",
              "sitePath" : "/path/to/document_root/",
              "id" : "2",
              "parent" : {
                "id": "1",
                "name": "Parent Website"
              },
              "archiveTypePreferred" : "Individual",
              "contentCss" : "{{theme_static}}css/editor.css",
              "junkScoreThreshold" : "0",
              "internalAutodiscovery" : false,
              "createdDate" : "2014-12-28T23:09:45+09:00",
              "class" : "website",
              "moderateComments" : "2",
              "allowCommentsDefault" : true,
              "includeCache" : false,
              "allowCommenterRegist" : true,
              "maxRevisionsEntry" : "20",
              "updatable" : true,
              "requireCommentEmails" : false,
              "ccLicenseImage" : "https://i.creativecommons.org/l/by/4.0/88x31.png",
              "allowComments" : true,
              "allowPingsDefault" : false,
              "pingOthers" : [],
              "dynamicCache" : false,
              "basenameLimit" : "100",
              "modifiedDate" : "2015-03-12T12:16:24+09:00",
              "dynamicConditional" : false,
              "pageCustomPrefs" : [
                "title",
                "text",
                "excerpt",
                "keywords",
                "tags",
                "feedback",
                "assets"
              ],
              "allowPings" : false,
              "commenterAuthenticators" : [
                "MovableType"
              ],
              "host" : "localhost",
              "ccLicenseUrl" : "http://creativecommons.org/licenses/by/4.0/",
              "newCreatedUserRoles" : [],
              "wordsInExcerpt" : "40",
              "sortOrderComments" : "ascend",
              "followAuthLinks" : true,
              "allowUnregComments" : false,
              "maxRevisionsTemplate" : "20",
              "moderatePings" : true,
              "customDynamicTemplates" : "none"
            }
          ]
        }

## insertNewWebsite [/sites]

### New in v2.0: Create a new website. [POST]

+ Authorization is required.
+ This method accepts PUT and POST with __method=PUT.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to create a new website.
404 | Not Found | Site not found.

**Permissions**
+ create_website

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
blog | Object | Yes | | Single Sites resource

+ Request Sites resource

    + Headers

            Content-Type: application/x-www-form-urlencoded
            X-MT-Authorization: MTAuth accessToken=<Token>

    + Body

            website={"url" : "http://example.com/", "name" : "New Website", "sitePath":"/path/to/document_root/"}


+ Response 200 (application/json)

        {
          "serverOffset" : 9,
          "themeId" : "rainier",
          "statusDefault" : "Publish",
          "autodiscoverLinks" : false,
          "useRevision" : true,
          "relativeUrl" : "/",
          "entryCustomPrefs" : [
            "title",
            "body",
            "category",
            "tags",
            "feedback",
            "publishing",
            "assets"
          ],
          "archivePath" : "/path/to/document_root/",
          "useCommentConfirmation" : true,
          "url" : "http://example.com/",
          "smartReplaceFields" : [
            "title",
            "text",
            "text_more",
            "keywords",
            "excerpt",
            "tags"
          ],
          "timezone" : "+09:00",
          "daysOrPosts" : "posts",
          "sortOrderPosts" : "descend",
          "convertParas" : "richtext",
          "name" : "New Website",
          "description" : null,
          "includeSystem" : null,
          "archiveUrl" : "http://example.com/",
          "allowCommentHtml" : true,
          "fileExtension" : "html",
          "smartReplace" : 0,
          "junkFolderExpiry" : 14,
          "publishEmptyArchive" : false,
          "dateLanguage" : "ja",
          "listOnIndex" : 10,
          "pingWeblogs" : false,
          "emailNewComments" : 1,
          "language" : "",
          "autolinkUrls" : true,
          "sanitizeSpec" : 0,
          "customFields" : [],
          "emailNewPings" : 1,
          "nofollowUrls" : true,
          "createdBy" : {
            "userpicUrl" : null,
            "id" : "1",
            "displayName" : "Yuji Takayama"
          },
          "pingGoogle" : false,
          "convertParasComments" : 1,
          "sitePath" : "/path/to/document_root/",
          "id" : "10",
          "parent" : null,
          "archiveTypePreferred" : "",
          "contentCss" : null,
          "junkScoreThreshold" : 0,
          "internalAutodiscovery" : false,
          "createdDate" : "2015-03-24T22:03:47+09:00",
          "class" : "website",
          "moderateComments" : 2,
          "allowCommentsDefault" : true,
          "includeCache" : false,
          "allowCommenterRegist" : true,
          "maxRevisionsEntry" : 20,
          "updatable" : true,
          "requireCommentEmails" : false,
          "ccLicenseImage" : "",
          "allowComments" : true,
          "allowPingsDefault" : true,
          "pingOthers" : [],
          "dynamicCache" : false,
          "basenameLimit" : 100,
          "modifiedDate" : "2015-03-24T22:03:47+09:00",
          "dynamicConditional" : false,
          "pageCustomPrefs" : [
            "title",
            "body",
            "category",
            "tags",
            "feedback",
            "publishing",
            "assets"
          ],
          "allowPings" : true,
          "commenterAuthenticators" : [
            "MovableType"
          ],
          "host" : "example.com",
          "ccLicenseUrl" : "",
          "newCreatedUserRoles" : [],
          "wordsInExcerpt" : 40,
          "sortOrderComments" : "ascend",
          "followAuthLinks" : true,
          "allowUnregComments" : false,
          "maxRevisionsTemplate" : 20,
          "moderatePings" : true,
          "customDynamicTemplates" : "none"
        }

## insertNewBlog, updateSite and deleteSite [/sites/:site_id]

### New in v2.0: Create a new blog. [POST]

+ Authorization is required.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to create a new blog.
404 | Not Found | Site not found.

**Permissions**
+ create_blog

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
blog | Object | Yes | | Single Sites resource

+ Parameters
    + site_id (required, number) ... The site ID.

+ Request Sites resource

    + Headers

            Content-Type: application/x-www-form-urlencoded
            X-MT-Authorization: MTAuth accessToken=<Token>

    + Body

            blog={"name":"New Blog", "url":"blog", "sitePath":"blog"}

+ Response 200 (application/json)

        {
          "serverOffset" : 9,
          "themeId" : "rainier",
          "statusDefault" : "Publish",
          "autodiscoverLinks" : false,
          "useRevision" : true,
          "relativeUrl" : "/blog/",
          "entryCustomPrefs" : [
          "title",
          "body",
          "category",
          "tags",
          "feedback",
          "publishing",
          "assets"
          ],
          "archivePath" : "/path/to/document_root/blog",
          "useCommentConfirmation" : true,
          "url" : "http://example.com/blog/",
          "smartReplaceFields" : [
            "title",
            "text",
            "text_more",
            "keywords",
            "excerpt",
            "tags"
          ],
          "timezone" : "+09:00",
          "daysOrPosts" : "posts",
          "sortOrderPosts" : "descend",
          "convertParas" : "richtext",
          "name" : "New Blog",
          "description" : null,
          "includeSystem" : null,
          "archiveUrl" : "http://example.com/blog/",
          "allowCommentHtml" : true,
          "fileExtension" : "html",
          "smartReplace" : 0,
          "junkFolderExpiry" : 14,
          "publishEmptyArchive" : false,
          "dateLanguage" : "ja",
          "listOnIndex" : 10,
          "pingWeblogs" : false,
          "emailNewComments" : 1,
          "language" : "",
          "autolinkUrls" : true,
          "sanitizeSpec" : 0,
          "customFields" : [],
          "emailNewPings" : 1,
          "nofollowUrls" : true,
          "createdBy" : {
            "userpicUrl" : null,
            "id" : "1",
            "displayName" : "Yuji Takayama"
          },
          "pingGoogle" : false,
          "convertParasComments" : 1,
          "sitePath" : "/path/to/document_root/blog",
          "id" : "9",
          "parent" : {
            "name" : "First Website",
            "id" : "1"
          },
          "archiveTypePreferred" : "",
          "contentCss" : null,
          "junkScoreThreshold" : 0,
          "internalAutodiscovery" : false,
          "createdDate" : "2015-03-24T15:15:56+09:00",
          "class" : "blog",
          "moderateComments" : 2,
          "allowCommentsDefault" : true,
          "includeCache" : false,
          "allowCommenterRegist" : true,
          "maxRevisionsEntry" : "20",
          "updatable" : true,
          "requireCommentEmails" : false,
          "ccLicenseImage" : "",
          "allowComments" : true,
          "allowPingsDefault" : true,
          "pingOthers" : [],
          "dynamicCache" : false,
          "basenameLimit" : 100,
          "modifiedDate" : "2015-03-24T15:15:56+09:00",
          "dynamicConditional" : false,
          "pageCustomPrefs" : [
            "title",
            "body",
            "category",
            "tags",
            "feedback",
            "publishing",
            "assets"
          ],
          "allowPings" : true,
          "commenterAuthenticators" : [
            "MovableType"
          ],
          "host" : "example.com",
          "ccLicenseUrl" : "",
          "newCreatedUserRoles" : [],
          "wordsInExcerpt" : 40,
          "sortOrderComments" : "ascend",
          "followAuthLinks" : true,
          "allowUnregComments" : false,
          "maxRevisionsTemplate" : "20",
          "moderatePings" : true,
          "customDynamicTemplates" : "none"
        }

### New in v2.0: Update an existing blog or website. [PUT]

+ Authorization is required.
+ This method accepts PUT and POST with __method=PUT.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to update an existing blog or website.
404 | Not Found | Site not found.

**Permissions**
+ edit_blog_config

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
blog | Object | Yes | | Single Sites resource

+ Parameters
    + site_id (required, number) ... The site ID.

+ Request Sites resource

    + Headers

            Content-Type: application/x-www-form-urlencoded
            X-MT-Authorization: MTAuth accessToken=<Token>

    + Body

            website={"name" : "Our new Website"} or blog={"name" : "Our new Website"}


+ Response 200 (application/json)

        {
          "serverOffset" : 9,
          "themeId" : "rainier",
          "statusDefault" : "Publish",
          "autodiscoverLinks" : false,
          "useRevision" : true,
          "relativeUrl" : "/",
          "entryCustomPrefs" : [
            "title",
            "body",
            "category",
            "tags",
            "feedback",
            "publishing",
            "assets"
          ],
          "archivePath" : "/path/to/document_root/",
          "useCommentConfirmation" : true,
          "url" : "http://example.com/",
          "smartReplaceFields" : [
            "title",
            "text",
            "text_more",
            "keywords",
            "excerpt",
            "tags"
          ],
          "timezone" : "+09:00",
          "daysOrPosts" : "posts",
          "sortOrderPosts" : "descend",
          "convertParas" : "richtext",
          "name" : "Our new Website",
          "description" : null,
          "includeSystem" : null,
          "archiveUrl" : "http://example.com/",
          "allowCommentHtml" : true,
          "fileExtension" : "html",
          "smartReplace" : 0,
          "junkFolderExpiry" : 14,
          "publishEmptyArchive" : false,
          "dateLanguage" : "ja",
          "listOnIndex" : 10,
          "pingWeblogs" : false,
          "emailNewComments" : 1,
          "language" : "",
          "autolinkUrls" : true,
          "sanitizeSpec" : 0,
          "customFields" : [],
          "emailNewPings" : 1,
          "nofollowUrls" : true,
          "createdBy" : {
            "userpicUrl" : null,
            "id" : "1",
            "displayName" : "Yuji Takayama"
          },
          "pingGoogle" : false,
          "convertParasComments" : 1,
          "sitePath" : "/path/to/document_root/",
          "id" : "10",
          "parent" : null,
          "archiveTypePreferred" : "",
          "contentCss" : null,
          "junkScoreThreshold" : 0,
          "internalAutodiscovery" : false,
          "createdDate" : "2015-03-24T22:03:47+09:00",
          "class" : "website",
          "moderateComments" : 2,
          "allowCommentsDefault" : true,
          "includeCache" : false,
          "allowCommenterRegist" : true,
          "maxRevisionsEntry" : 20,
          "updatable" : true,
          "requireCommentEmails" : false,
          "ccLicenseImage" : "",
          "allowComments" : true,
          "allowPingsDefault" : true,
          "pingOthers" : [],
          "dynamicCache" : false,
          "basenameLimit" : 100,
          "modifiedDate" : "2015-03-24T22:03:47+09:00",
          "dynamicConditional" : false,
          "pageCustomPrefs" : [
            "title",
            "body",
            "category",
            "tags",
            "feedback",
            "publishing",
            "assets"
          ],
          "allowPings" : true,
          "commenterAuthenticators" : [
            "MovableType"
          ],
          "host" : "example.com",
          "ccLicenseUrl" : "",
          "newCreatedUserRoles" : [],
          "wordsInExcerpt" : 40,
          "sortOrderComments" : "ascend",
          "followAuthLinks" : true,
          "allowUnregComments" : false,
          "maxRevisionsTemplate" : 20,
          "moderatePings" : true,
          "customDynamicTemplates" : "none"
        }

### New in v2.0: Delete an existing blog or website. [DELETE]

+ Authorization is required.
+ This method accepts DELETE and POST with __method=DELETE.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to delete an existing blog or website.
404 | Not Found | Site not found.

**Permissions**
+ delete_website (for website)
+ delete_blog (for blog)

+ Parameters
    + site_id (required, number) ... The site ID.

+ Request

    + Headers

            Content-Type: application/x-www-form-urlencoded
            X-MT-Authorization: MTAuth accessToken=<Token>

+ Response 200 (application/json)

        {
          "serverOffset" : 9,
          "themeId" : "rainier",
          "statusDefault" : "Publish",
          "autodiscoverLinks" : false,
          "useRevision" : true,
          "relativeUrl" : "/",
          "entryCustomPrefs" : [
            "title",
            "body",
            "category",
            "tags",
            "feedback",
            "publishing",
            "assets"
          ],
          "archivePath" : "/path/to/document_root/",
          "useCommentConfirmation" : true,
          "url" : "http://example.com/",
          "smartReplaceFields" : [
            "title",
            "text",
            "text_more",
            "keywords",
            "excerpt",
            "tags"
          ],
          "timezone" : "+09:00",
          "daysOrPosts" : "posts",
          "sortOrderPosts" : "descend",
          "convertParas" : "richtext",
          "name" : "Our new Website",
          "description" : null,
          "includeSystem" : null,
          "archiveUrl" : "http://example.com/",
          "allowCommentHtml" : true,
          "fileExtension" : "html",
          "smartReplace" : 0,
          "junkFolderExpiry" : 14,
          "publishEmptyArchive" : false,
          "dateLanguage" : "ja",
          "listOnIndex" : 10,
          "pingWeblogs" : false,
          "emailNewComments" : 1,
          "language" : "",
          "autolinkUrls" : true,
          "sanitizeSpec" : 0,
          "customFields" : [],
          "emailNewPings" : 1,
          "nofollowUrls" : true,
          "createdBy" : {
            "userpicUrl" : null,
            "id" : "1",
            "displayName" : "Yuji Takayama"
          },
          "pingGoogle" : false,
          "convertParasComments" : 1,
          "sitePath" : "/path/to/document_root/",
          "id" : "10",
          "parent" : null,
          "archiveTypePreferred" : "",
          "contentCss" : null,
          "junkScoreThreshold" : 0,
          "internalAutodiscovery" : false,
          "createdDate" : "2015-03-24T22:03:47+09:00",
          "class" : "website",
          "moderateComments" : 2,
          "allowCommentsDefault" : true,
          "includeCache" : false,
          "allowCommenterRegist" : true,
          "maxRevisionsEntry" : 20,
          "updatable" : true,
          "requireCommentEmails" : false,
          "ccLicenseImage" : "",
          "allowComments" : true,
          "allowPingsDefault" : true,
          "pingOthers" : [],
          "dynamicCache" : false,
          "basenameLimit" : 100,
          "modifiedDate" : "2015-03-24T22:03:47+09:00",
          "dynamicConditional" : false,
          "pageCustomPrefs" : [
            "title",
            "body",
            "category",
            "tags",
            "feedback",
            "publishing",
            "assets"
          ],
          "allowPings" : true,
          "commenterAuthenticators" : [
            "MovableType"
          ],
          "host" : "example.com",
          "ccLicenseUrl" : "",
          "newCreatedUserRoles" : [],
          "wordsInExcerpt" : 40,
          "sortOrderComments" : "ascend",
          "followAuthLinks" : true,
          "allowUnregComments" : false,
          "maxRevisionsTemplate" : 20,
          "moderatePings" : true,
          "customDynamicTemplates" : "none"
        }


## getBlog [/sites/:site_id(?fields)]
### Retrieve a single website/blog by its ID. [GET]

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to get an existing Site.
404 | Not Found | Site not found.

+ Parameters
    + site_id (required, number) ... The site ID.
    + fields (optional, string) ... The field list to retrieve as part of the Sites resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "serverOffset" : 9,
          "themeId" : "rainier",
          "statusDefault" : "Publish",
          "autodiscoverLinks" : false,
          "useRevision" : true,
          "relativeUrl" : "/blog/",
          "entryCustomPrefs" : [
          "title",
          "body",
          "category",
          "tags",
          "feedback",
          "publishing",
          "assets"
          ],
          "archivePath" : "/path/to/document_root/blog",
          "useCommentConfirmation" : true,
          "url" : "http://example.com/blog/",
          "smartReplaceFields" : [
            "title",
            "text",
            "text_more",
            "keywords",
            "excerpt",
            "tags"
          ],
          "timezone" : "+09:00",
          "daysOrPosts" : "posts",
          "sortOrderPosts" : "descend",
          "convertParas" : "richtext",
          "name" : "New Blog",
          "description" : null,
          "includeSystem" : null,
          "archiveUrl" : "http://example.com/blog/",
          "allowCommentHtml" : true,
          "fileExtension" : "html",
          "smartReplace" : 0,
          "junkFolderExpiry" : 14,
          "publishEmptyArchive" : false,
          "dateLanguage" : "ja",
          "listOnIndex" : 10,
          "pingWeblogs" : false,
          "emailNewComments" : 1,
          "language" : "",
          "autolinkUrls" : true,
          "sanitizeSpec" : 0,
          "customFields" : [],
          "emailNewPings" : 1,
          "nofollowUrls" : true,
          "createdBy" : {
            "userpicUrl" : null,
            "id" : "1",
            "displayName" : "Yuji Takayama"
          },
          "pingGoogle" : false,
          "convertParasComments" : 1,
          "sitePath" : "/path/to/document_root/blog",
          "id" : "9",
          "parent" : {
            "name" : "First Website",
            "id" : "1"
          },
          "archiveTypePreferred" : "",
          "contentCss" : null,
          "junkScoreThreshold" : 0,
          "internalAutodiscovery" : false,
          "createdDate" : "2015-03-24T15:15:56+09:00",
          "class" : "blog",
          "moderateComments" : 2,
          "allowCommentsDefault" : true,
          "includeCache" : false,
          "allowCommenterRegist" : true,
          "maxRevisionsEntry" : "20",
          "updatable" : true,
          "requireCommentEmails" : false,
          "ccLicenseImage" : "",
          "allowComments" : true,
          "allowPingsDefault" : true,
          "pingOthers" : [],
          "dynamicCache" : false,
          "basenameLimit" : 100,
          "modifiedDate" : "2015-03-24T15:15:56+09:00",
          "dynamicConditional" : false,
          "pageCustomPrefs" : [
            "title",
            "body",
            "category",
            "tags",
            "feedback",
            "publishing",
            "assets"
          ],
          "allowPings" : true,
          "commenterAuthenticators" : [
            "MovableType"
          ],
          "host" : "example.com",
          "ccLicenseUrl" : "",
          "newCreatedUserRoles" : [],
          "wordsInExcerpt" : 40,
          "sortOrderComments" : "ascend",
          "followAuthLinks" : true,
          "allowUnregComments" : false,
          "maxRevisionsTemplate" : "20",
          "moderatePings" : true,
          "customDynamicTemplates" : "none"
        }

# Group Users

This is the Users resource.

Property Name | Type | Data Type | Database Column | Private | Read Only | Description | Version
------------ | ------------- | ------------ | ------------ | ------------- | ------------ | ------------ | ------------
createdBy | Object | User | - | Y | Y | Created user of this user. | v2
createdBy.displayName | value | string | mt_author.author_nickname | Y | Y | The display name of this user creator. | v2
createdBy.id | value | number | mt_author.author_created_by | Y | Y | The ID of this user creator. | v2
createdBy.userpicUrl | value | string | mt_author.author_userpic_url | | Y | The URL of this user creator's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
createdDate | value | iso 8601 datetime | mt_author.author_created_on | - | Y | Created date of this user. | v2
customFields | value | Field | - | - | Y | The list of customfields data of this user. | v2
customField.basename | value | string | mt_field.field_basename | - | Y | The basename of this customfield. | v2
customField.value | value | string | mt_author_meta.* | - | - | The value of this customfield. | v2
dateFormat | value | string | mt_author.author_date_format | Y | | The date formatting for this user. | v2
displayName | value | string | mt_author.author_nickname |  |  | The public display name for this user. | v1
email | value | string | mt_author.author_email | Y |  | The email address for this user. | v1
id | value | number | mt_author.author_id | Y | Y | The unique ID for this user. | v1
isSuperuser | value | boolean | | Y | Y | <dl><dt>true</dt><dd>This user have permission for system administration.</dd><dt>false</dt><dd>This user does not have permission for system administration.</dd></dl> | v2
language | value | string | mt_author.author_preferred_language | | | The preferred language for this user. <dl><dt>Available values</dt><dd><ul><li>de</li><li>en-us</li><li>es</li><li>fr</li><li>nl</li><li>ja</li></ul></dd></dl>| v1
lockedOut | value | boolean | mt_author.author_locked_out_time | Y | Y | <dl><dt>true</dt><dd>This user is currently locked out.</dd><dt>false</dt><dd>This user is not locked out.</dd></dl> | v2
modifiedBy | Object | User | - | - | Y | Last modified user of this user. | v2
modifiedBy.displayName | value | string | mt_author.author_nickname | - | Y | The display name of this user modifier. | v2
modifiedBy.id | value | number | mt_author.author_modified_by | - | Y | The ID of this user modifier. | v2
modifiedBy.userpicUrl | value | string | mt_author.author_userpic_url | - | Y | The URL of this user modifier's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v2
modifiedDate | value | iso 8601 datetime | mt_author.author_modified_on | - | Y | Last modified date of this user. | v2
name | value | string | mt_author.author_name | | | The account name for this user. [update in v2] This column was changed to updatable from v2.| v1
password | value | string | mt_author.author_password | Y | Write Only | The password for this user. This property is write  only. | v2
updatable | value | boolean |  |  | Y | <dl><dt>true</dt><dd>The user who accessed can update this user.</dd><dt>false</dt><dd>The user who accessed cannot update this user.</dd></dl> | v1
url | value | string | mt_author.author_url |  |  | The web site URL for this user. | v1
userpicUrl | value | string |  |  | Y | The profile photo URL for this user. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If user does not set own userpic, will be returned empty string. | v1
status | value | string | mt_author.author_status | Y | | The status for this user. Available value is follows.<dl><dt>Active</dt><dd>The status is active. The user can do anything within his/her permissions.<dt>Disabled</dt><dd>The status is disabled. The user cannot do anything.<dt>Pending</dt><dd>The status is pending. The user is waiting for approval by the administrator. Therefore, this user cannot do anything. | v2
systemPermissions | ARRAY | string | - | Y | - | The list of system permissions which this user have. Only system administrator can get this property | v2
tagDelimiter | value | string | mt_author.author_entry_prefs | Y | | The tag delimiter character for this user. Available value is follow. <dl><dt>comma</dt><dd>Separator character is single comma.</dd><dt>space</dt><dd>Separator character is single space</dd></dl>| v2
textFormat | value | string | mt_author.author_text_format | Y | | The text formatting for this user. | v2

        {
          "status" : "Active",
          "createdBy" : {
            "userpicUrl" : null,
            "id" : "1",
            "displayName" : "Yuji Takayama"
          },
          "updatable" : true,
          "lockedOut" : false,
          "isSuperuser" : true,
          "dateFormat" : "relative",
          "systemPermissions" : [
            "administer",
            "create_website",
            "create_blog",
            "edit_templates",
            "manage_plugins",
            "view_log"
          ],
          "email" : "ytakayama@sixapart.com",
          "userpicUrl" : null,
          "url" : "",
          "id" : "1",
          "tagDelimiter" : "comma",
          "displayName" : "Yuji Takayama",
          "modifiedBy" : {
            "userpicUrl" : null,
            "id" : "1",
            "displayName" : "Yuji Takayama"
          },
          "modifiedDate" : "2015-03-26T17:12:18+09:00",
          "language" : "en-us",
          "name" : "takayama",
          "textFormat" : "0",
          "createdDate" : "2015-03-23T14:53:52+09:00",
          "customFields" : []
        }

## listUsers [/users(?search, searchFields, limit, offset, sortBy, sortOrder, fields, includeIds, excludeIds, status, lockout)]

### New in v2.0: Retrieve a list of users in the specified site. [GET]

+ Authentication is required if want to include non-active users. Also, want to get private properties.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to retrieve the list of users.

**Permissions**

+ administer
    + for retrieve non-active users
    + for read private properties

+ Parameters
    + search (optional, string) ... Search query.
    + searchFields = `name,displayName,email,url` (optional, string) ... The comma separated field name list to search.
    + limit = `10` (optional, number) ... Maximum number of users to retrieve.
    + offset = `0` (optional, number) ... 0-indexed offset.
    + sortBy = `name` (optional, string) ... The field name for sort. You can specify one of following values<ul><li>id</li><li>name</li></ul>
    + sortOrder = `descend` (optional, string) ... <dl><dt>descend</dt><dd>(default) Return users in descending order.</dd><dt>ascend</dt><dd>Return users in ascending order.</dd></dl>
    + fields (optional, string) ... The field list to retrieve as part of the Users resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.
    + includeIds (optional, string) ... The comma separated ID list of users to include to result.
    + excludeIds (optional, string) ... The comma separated ID list of users to exclude from result.
    + status (optional, string) ... Filter by users's status. <dl><dt>active</dt><dd>status is Active</dd><dt>disabled</dt><dd>status is Disabled.</dd><dt>pending</dt><dd>status is Pending</dd></dl>
    + lockout ... Filter by user's lockout status. <dl><dt>locked_out</dt><dd>Locked out user only</dd><dt>not_locked_out</dt><dd>Not locked out user only</dd></dl>

+ Response 200 (application/json)

        {
          "totalResults" : 1,
          "items" : [
            {
              "status" : "Active",
              "createdBy" : {
                "userpicUrl" : null,
                "id" : "1",
                "displayName" : "Yuji Takayama"
              },
              "updatable" : true,
              "lockedOut" : false,
              "isSuperuser" : true,
              "dateFormat" : "relative",
              "systemPermissions" : [
                "administer",
                "create_website",
                "create_blog",
                "edit_templates",
                "manage_plugins",
                "view_log"
              ],
              "email" : "ytakayama@sixapart.com",
              "userpicUrl" : null,
              "url" : "",
              "id" : "1",
              "tagDelimiter" : "comma",
              "displayName" : "Yuji Takayama",
              "modifiedBy" : {
                "userpicUrl" : null,
                "id" : "1",
                "displayName" : "Yuji Takayama"
              },
              "modifiedDate" : "2015-03-26T17:12:18+09:00",
              "language" : "en-us",
              "name" : "takayama",
              "textFormat" : "0",
              "createdDate" : "2015-03-23T14:53:52+09:00",
              "customFields" : []
            }
          ]
        }

## createUser [/users]

### New in v2.0: Create a new user. [POST]

+ Authentication is required.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to create a new user.

**Permissions**

+ administer

**Request Body Parameters**

Name | Type | Required | Default | Description
---- | ---- | -------- | ------- | -----------
entry | Object | Yes | | Single Entries resource

+ Parameters
    + site_id (required, number) ... The site ID.

+ Request Entries resource

    + Headers

            Content-Type: application/x-www-form-urlencoded
            X-MT-Authorization: MTAuth accessToken=<Token>

    + Body

            user={"email" : "aikawa@example.com","displayName" : "Ichiro Aikawa","name" : "aikawa","password":"password"}

+ Response 200 (application/json)

        {
          "status" : "Active",
          "createdBy" : {
            "userpicUrl" : null,
            "id" : "1",
            "displayName" : "Yuji Takayama"
          },
          "updatable" : true,
          "lockedOut" : false,
          "isSuperuser" : false,
          "dateFormat" : "relative",
          "systemPermissions" : [],
          "email" : "aikawa@example.com",
          "userpicUrl" : null,
          "url" : null,
          "id" : "2",
          "tagDelimiter" : "comma",
          "displayName" : "Ichiro Aikawa",
          "modifiedDate" : "2015-03-27T10:45:43+09:00",
          "language" : "ja",
          "name" : "aikawa",
          "textFormat" : 0,
          "createdDate" : "2015-03-27T10:45:43+09:00",
          "customFields" : []
        }

## getUser [/users/:user_id(?fields)]

### Retrieve a single user by its own ID. [GET]

+ Authentication is required if want to get non-active user or want to get private properties.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to get the user.
404 | Not Found | User not found.

**Permissions**

+ administer

+ Parameters
    + user_id (required, number or the word 'me') ... The user ID.
    + fields (optional, string) ... The field list to retrieve as part of the Users resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.

+ Response 200 (application/json)

        {
          "status" : "Active",
          "createdBy" : {
            "userpicUrl" : null,
            "id" : "1",
            "displayName" : "Yuji Takayama"
          },
          "updatable" : true,
          "lockedOut" : false,
          "isSuperuser" : true,
          "dateFormat" : "relative",
          "systemPermissions" : [
            "administer",
            "create_website",
            "create_blog",
            "edit_templates",
            "manage_plugins",
            "view_log"
          ],
          "email" : "ytakayama@sixapart.com",
          "userpicUrl" : null,
          "url" : "",
          "id" : "1",
          "tagDelimiter" : "comma",
          "displayName" : "Yuji Takayama",
          "modifiedBy" : {
            "userpicUrl" : null,
            "id" : "1",
            "displayName" : "Yuji Takayama"
          },
          "modifiedDate" : "2015-03-26T17:12:18+09:00",
          "language" : "en-us",
          "name" : "takayama",
          "textFormat" : "0",
          "createdDate" : "2015-03-23T14:53:52+09:00",
          "customFields" : []
        }

## updateUser and deleteUser [/users/:user_id]

### Update oneself or another one's user data. [PUT]

+ Authentication is required.
+ This method accepts PUT and POST with __method=PUT.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to update user.
404 | Not Found | User not found.
405 | Method Not Allowed | Request method is not 'PUT' or 'POST' with '__method=PUT'

**Permissions**

+ administer
    + If you want to update another one's or non-active user.

+ Parameters
    + user_id (required, number or the word 'me') ... The user ID.

+ Request Entries resource

    + Headers

            Content-Type: application/x-www-form-urlencoded
            X-MT-Authorization: MTAuth accessToken=<Token>

    + Body

            user={"displayName": "New Name"}

+ Response 200 (application/json)

        {
          "status" : "Active",
          "createdBy" : {
            "userpicUrl" : null,
            "id" : "1",
            "displayName" : "Yuji Takayama"
          },
          "updatable" : true,
          "lockedOut" : false,
          "isSuperuser" : false,
          "dateFormat" : "relative",
          "systemPermissions" : [],
          "email" : "aikawa@example.com",
          "userpicUrl" : null,
          "url" : null,
          "id" : "2",
          "tagDelimiter" : "comma",
          "displayName" : "New Name",
          "modifiedDate" : "2015-03-27T10:45:43+09:00",
          "language" : "ja",
          "name" : "aikawa",
          "textFormat" : "0",
          "createdDate" : "2015-03-27T10:45:43+09:00",
          "customFields" : []
        }

### New in v2.0: Delete user. [DELETE]

+ Authentication is required.
+ This method accepts DELETE and POST with __method=DELETE.
+ Cannot delete oneself. Also, cannot delete system administrator user.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to delete user.
404 | Not Found | User not found.
405 | Method Not Allowed | Request method is not 'DELETE' or 'POST' with '__method=DELETE'

**Permissions**

+ administer

+ Parameters
    + user_id (required, number) ... The user ID.

+ Request Entries resource

    + Headers

            Content-Type: application/x-www-form-urlencoded
            X-MT-Authorization: MTAuth accessToken=<Token>

+ Response 200 (application/json)

        {
          "status" : "Active",
          "createdBy" : {
            "userpicUrl" : null,
            "id" : "1",
            "displayName" : "Yuji Takayama"
          },
          "updatable" : true,
          "lockedOut" : false,
          "isSuperuser" : false,
          "dateFormat" : "relative",
          "systemPermissions" : [],
          "email" : "aikawa@example.com",
          "userpicUrl" : null,
          "url" : null,
          "id" : "2",
          "tagDelimiter" : "comma",
          "displayName" : "New Name",
          "modifiedDate" : "2015-03-27T10:45:43+09:00",
          "language" : "ja",
          "name" : "aikawa",
          "textFormat" : "0",
          "createdDate" : "2015-03-27T10:45:43+09:00",
          "customFields" : []
        }

## unlockUser [/users/:user_id/unlock]

### Unlock user account. [POST]

+ Authentication is required.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to unlock user.
404 | Not Found | User not found.

**Permissions**

+ administer

+ Parameters
    + user_id (required, number) ... The user ID.

+ Request Entries resource

    + Headers

            Content-Type: application/x-www-form-urlencoded
            X-MT-Authorization: MTAuth accessToken=<Token>

+ Response 200 (application/json)

        {
          "status": "success"
        }

## recoverPasswordForUser [/users/:user_id/recover_password]

### Send the link for password recovery to specified user by email. [POST]

+ Authentication is required.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.
403 | Forbidden | Do not have permission to send password recovery mail.
404 | Not Found | User not found.

**Permissions**

+ administer

+ Parameters
    + user_id (required, number) ... The user ID.

+ Request Entries resource

    + Headers

            Content-Type: application/x-www-form-urlencoded
            X-MT-Authorization: MTAuth accessToken=<Token>

+ Response 200 (application/json)

        {
          "status": "success",
          "message": <Result message>
        }

## recoverPassword [/recover_password]

### Send the link for password recovery to specified email. [POST]

+ This method always returns successful code if it does not found a user, because security reason.
+ Authentication is not required.

**Status Code**

Code | Status | Description
---- | ------ | -----------
200 | OK | No Errors.

**Permissions**

+ administer

+ Parameters
    + user_id (required, number) ... The user ID.

+ Request Entries resource

    + Headers

            Content-Type: application/x-www-form-urlencoded
            X-MT-Authorization: MTAuth accessToken=<Token>

    + Body

            email=<Email address for user>&name=<Name for user>

+ Response 200 (application/json)

        {
          "status": "success",
          "message": <Result message>
        }

